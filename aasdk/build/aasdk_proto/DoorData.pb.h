// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DoorData.proto

#ifndef PROTOBUF_INCLUDED_DoorData_2eproto
#define PROTOBUF_INCLUDED_DoorData_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_DoorData_2eproto 

namespace protobuf_DoorData_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_DoorData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {
class Door;
class DoorDefaultTypeInternal;
extern DoorDefaultTypeInternal _Door_default_instance_;
}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::data::Door* Arena::CreateMaybeMessage<::f1x::aasdk::proto::data::Door>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {

// ===================================================================

class Door : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.data.Door) */ {
 public:
  Door();
  virtual ~Door();

  Door(const Door& from);

  inline Door& operator=(const Door& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Door(Door&& from) noexcept
    : Door() {
    *this = ::std::move(from);
  }

  inline Door& operator=(Door&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Door& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Door* internal_default_instance() {
    return reinterpret_cast<const Door*>(
               &_Door_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Door* other);
  friend void swap(Door& a, Door& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Door* New() const final {
    return CreateMaybeMessage<Door>(NULL);
  }

  Door* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Door>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Door& from);
  void MergeFrom(const Door& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Door* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bool door_open = 3;
  int door_open_size() const;
  void clear_door_open();
  static const int kDoorOpenFieldNumber = 3;
  bool door_open(int index) const;
  void set_door_open(int index, bool value);
  void add_door_open(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      door_open() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_door_open();

  // required bool hood_open = 1;
  bool has_hood_open() const;
  void clear_hood_open();
  static const int kHoodOpenFieldNumber = 1;
  bool hood_open() const;
  void set_hood_open(bool value);

  // required bool boot_open = 2;
  bool has_boot_open() const;
  void clear_boot_open();
  static const int kBootOpenFieldNumber = 2;
  bool boot_open() const;
  void set_boot_open(bool value);

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.data.Door)
 private:
  void set_has_hood_open();
  void clear_has_hood_open();
  void set_has_boot_open();
  void clear_has_boot_open();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< bool > door_open_;
  bool hood_open_;
  bool boot_open_;
  friend struct ::protobuf_DoorData_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Door

// required bool hood_open = 1;
inline bool Door::has_hood_open() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Door::set_has_hood_open() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Door::clear_has_hood_open() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Door::clear_hood_open() {
  hood_open_ = false;
  clear_has_hood_open();
}
inline bool Door::hood_open() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.Door.hood_open)
  return hood_open_;
}
inline void Door::set_hood_open(bool value) {
  set_has_hood_open();
  hood_open_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.Door.hood_open)
}

// required bool boot_open = 2;
inline bool Door::has_boot_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Door::set_has_boot_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Door::clear_has_boot_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Door::clear_boot_open() {
  boot_open_ = false;
  clear_has_boot_open();
}
inline bool Door::boot_open() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.Door.boot_open)
  return boot_open_;
}
inline void Door::set_boot_open(bool value) {
  set_has_boot_open();
  boot_open_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.Door.boot_open)
}

// repeated bool door_open = 3;
inline int Door::door_open_size() const {
  return door_open_.size();
}
inline void Door::clear_door_open() {
  door_open_.Clear();
}
inline bool Door::door_open(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.Door.door_open)
  return door_open_.Get(index);
}
inline void Door::set_door_open(int index, bool value) {
  door_open_.Set(index, value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.Door.door_open)
}
inline void Door::add_door_open(bool value) {
  door_open_.Add(value);
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.data.Door.door_open)
}
inline const ::google::protobuf::RepeatedField< bool >&
Door::door_open() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.data.Door.door_open)
  return door_open_;
}
inline ::google::protobuf::RepeatedField< bool >*
Door::mutable_door_open() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.data.Door.door_open)
  return &door_open_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_DoorData_2eproto
