// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TouchEventData.proto

#ifndef PROTOBUF_INCLUDED_TouchEventData_2eproto
#define PROTOBUF_INCLUDED_TouchEventData_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "TouchLocationData.pb.h"
#include "TouchActionEnum.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_TouchEventData_2eproto 

namespace protobuf_TouchEventData_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_TouchEventData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {
class TouchEvent;
class TouchEventDefaultTypeInternal;
extern TouchEventDefaultTypeInternal _TouchEvent_default_instance_;
}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::data::TouchEvent* Arena::CreateMaybeMessage<::f1x::aasdk::proto::data::TouchEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {

// ===================================================================

class TouchEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.data.TouchEvent) */ {
 public:
  TouchEvent();
  virtual ~TouchEvent();

  TouchEvent(const TouchEvent& from);

  inline TouchEvent& operator=(const TouchEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TouchEvent(TouchEvent&& from) noexcept
    : TouchEvent() {
    *this = ::std::move(from);
  }

  inline TouchEvent& operator=(TouchEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TouchEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TouchEvent* internal_default_instance() {
    return reinterpret_cast<const TouchEvent*>(
               &_TouchEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TouchEvent* other);
  friend void swap(TouchEvent& a, TouchEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TouchEvent* New() const final {
    return CreateMaybeMessage<TouchEvent>(NULL);
  }

  TouchEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TouchEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TouchEvent& from);
  void MergeFrom(const TouchEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TouchEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .f1x.aasdk.proto.data.TouchLocation touch_location = 1;
  int touch_location_size() const;
  void clear_touch_location();
  static const int kTouchLocationFieldNumber = 1;
  ::f1x::aasdk::proto::data::TouchLocation* mutable_touch_location(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::TouchLocation >*
      mutable_touch_location();
  const ::f1x::aasdk::proto::data::TouchLocation& touch_location(int index) const;
  ::f1x::aasdk::proto::data::TouchLocation* add_touch_location();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::TouchLocation >&
      touch_location() const;

  // optional uint32 action_index = 2;
  bool has_action_index() const;
  void clear_action_index();
  static const int kActionIndexFieldNumber = 2;
  ::google::protobuf::uint32 action_index() const;
  void set_action_index(::google::protobuf::uint32 value);

  // required .f1x.aasdk.proto.enums.TouchAction.Enum touch_action = 3;
  bool has_touch_action() const;
  void clear_touch_action();
  static const int kTouchActionFieldNumber = 3;
  ::f1x::aasdk::proto::enums::TouchAction_Enum touch_action() const;
  void set_touch_action(::f1x::aasdk::proto::enums::TouchAction_Enum value);

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.data.TouchEvent)
 private:
  void set_has_action_index();
  void clear_has_action_index();
  void set_has_touch_action();
  void clear_has_touch_action();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::TouchLocation > touch_location_;
  ::google::protobuf::uint32 action_index_;
  int touch_action_;
  friend struct ::protobuf_TouchEventData_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TouchEvent

// repeated .f1x.aasdk.proto.data.TouchLocation touch_location = 1;
inline int TouchEvent::touch_location_size() const {
  return touch_location_.size();
}
inline ::f1x::aasdk::proto::data::TouchLocation* TouchEvent::mutable_touch_location(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.data.TouchEvent.touch_location)
  return touch_location_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::TouchLocation >*
TouchEvent::mutable_touch_location() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.data.TouchEvent.touch_location)
  return &touch_location_;
}
inline const ::f1x::aasdk::proto::data::TouchLocation& TouchEvent::touch_location(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.TouchEvent.touch_location)
  return touch_location_.Get(index);
}
inline ::f1x::aasdk::proto::data::TouchLocation* TouchEvent::add_touch_location() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.data.TouchEvent.touch_location)
  return touch_location_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::TouchLocation >&
TouchEvent::touch_location() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.data.TouchEvent.touch_location)
  return touch_location_;
}

// optional uint32 action_index = 2;
inline bool TouchEvent::has_action_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TouchEvent::set_has_action_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TouchEvent::clear_has_action_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TouchEvent::clear_action_index() {
  action_index_ = 0u;
  clear_has_action_index();
}
inline ::google::protobuf::uint32 TouchEvent::action_index() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.TouchEvent.action_index)
  return action_index_;
}
inline void TouchEvent::set_action_index(::google::protobuf::uint32 value) {
  set_has_action_index();
  action_index_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.TouchEvent.action_index)
}

// required .f1x.aasdk.proto.enums.TouchAction.Enum touch_action = 3;
inline bool TouchEvent::has_touch_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TouchEvent::set_has_touch_action() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TouchEvent::clear_has_touch_action() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TouchEvent::clear_touch_action() {
  touch_action_ = 0;
  clear_has_touch_action();
}
inline ::f1x::aasdk::proto::enums::TouchAction_Enum TouchEvent::touch_action() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.TouchEvent.touch_action)
  return static_cast< ::f1x::aasdk::proto::enums::TouchAction_Enum >(touch_action_);
}
inline void TouchEvent::set_touch_action(::f1x::aasdk::proto::enums::TouchAction_Enum value) {
  assert(::f1x::aasdk::proto::enums::TouchAction_Enum_IsValid(value));
  set_has_touch_action();
  touch_action_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.TouchEvent.touch_action)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_TouchEventData_2eproto
