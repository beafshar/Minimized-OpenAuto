// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SensorEventIndicationMessage.proto

#ifndef PROTOBUF_INCLUDED_SensorEventIndicationMessage_2eproto
#define PROTOBUF_INCLUDED_SensorEventIndicationMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "GPSLocationData.pb.h"
#include "CompassData.pb.h"
#include "SpeedData.pb.h"
#include "RPMData.pb.h"
#include "OdometerData.pb.h"
#include "FuelLevelData.pb.h"
#include "ParkingBrakeData.pb.h"
#include "GearData.pb.h"
#include "DiagnosticsData.pb.h"
#include "NightModeData.pb.h"
#include "EnvironmentData.pb.h"
#include "HVACData.pb.h"
#include "DrivingStatusData.pb.h"
#include "SteeringWheelData.pb.h"
#include "PassengerData.pb.h"
#include "DoorData.pb.h"
#include "LightData.pb.h"
#include "AccelData.pb.h"
#include "GyroData.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_SensorEventIndicationMessage_2eproto 

namespace protobuf_SensorEventIndicationMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_SensorEventIndicationMessage_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class SensorEventIndication;
class SensorEventIndicationDefaultTypeInternal;
extern SensorEventIndicationDefaultTypeInternal _SensorEventIndication_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::messages::SensorEventIndication* Arena::CreateMaybeMessage<::f1x::aasdk::proto::messages::SensorEventIndication>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

class SensorEventIndication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.messages.SensorEventIndication) */ {
 public:
  SensorEventIndication();
  virtual ~SensorEventIndication();

  SensorEventIndication(const SensorEventIndication& from);

  inline SensorEventIndication& operator=(const SensorEventIndication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SensorEventIndication(SensorEventIndication&& from) noexcept
    : SensorEventIndication() {
    *this = ::std::move(from);
  }

  inline SensorEventIndication& operator=(SensorEventIndication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SensorEventIndication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SensorEventIndication* internal_default_instance() {
    return reinterpret_cast<const SensorEventIndication*>(
               &_SensorEventIndication_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(SensorEventIndication* other);
  friend void swap(SensorEventIndication& a, SensorEventIndication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SensorEventIndication* New() const final {
    return CreateMaybeMessage<SensorEventIndication>(NULL);
  }

  SensorEventIndication* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SensorEventIndication>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SensorEventIndication& from);
  void MergeFrom(const SensorEventIndication& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SensorEventIndication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .f1x.aasdk.proto.data.GPSLocation gps_location = 1;
  int gps_location_size() const;
  void clear_gps_location();
  static const int kGpsLocationFieldNumber = 1;
  ::f1x::aasdk::proto::data::GPSLocation* mutable_gps_location(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::GPSLocation >*
      mutable_gps_location();
  const ::f1x::aasdk::proto::data::GPSLocation& gps_location(int index) const;
  ::f1x::aasdk::proto::data::GPSLocation* add_gps_location();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::GPSLocation >&
      gps_location() const;

  // repeated .f1x.aasdk.proto.data.Compass compass = 2;
  int compass_size() const;
  void clear_compass();
  static const int kCompassFieldNumber = 2;
  ::f1x::aasdk::proto::data::Compass* mutable_compass(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Compass >*
      mutable_compass();
  const ::f1x::aasdk::proto::data::Compass& compass(int index) const;
  ::f1x::aasdk::proto::data::Compass* add_compass();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Compass >&
      compass() const;

  // repeated .f1x.aasdk.proto.data.Speed speed = 3;
  int speed_size() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  ::f1x::aasdk::proto::data::Speed* mutable_speed(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Speed >*
      mutable_speed();
  const ::f1x::aasdk::proto::data::Speed& speed(int index) const;
  ::f1x::aasdk::proto::data::Speed* add_speed();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Speed >&
      speed() const;

  // repeated .f1x.aasdk.proto.data.RPM rpm = 4;
  int rpm_size() const;
  void clear_rpm();
  static const int kRpmFieldNumber = 4;
  ::f1x::aasdk::proto::data::RPM* mutable_rpm(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::RPM >*
      mutable_rpm();
  const ::f1x::aasdk::proto::data::RPM& rpm(int index) const;
  ::f1x::aasdk::proto::data::RPM* add_rpm();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::RPM >&
      rpm() const;

  // repeated .f1x.aasdk.proto.data.Odometer odometer = 5;
  int odometer_size() const;
  void clear_odometer();
  static const int kOdometerFieldNumber = 5;
  ::f1x::aasdk::proto::data::Odometer* mutable_odometer(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Odometer >*
      mutable_odometer();
  const ::f1x::aasdk::proto::data::Odometer& odometer(int index) const;
  ::f1x::aasdk::proto::data::Odometer* add_odometer();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Odometer >&
      odometer() const;

  // repeated .f1x.aasdk.proto.data.FuelLevel fuel_level = 6;
  int fuel_level_size() const;
  void clear_fuel_level();
  static const int kFuelLevelFieldNumber = 6;
  ::f1x::aasdk::proto::data::FuelLevel* mutable_fuel_level(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::FuelLevel >*
      mutable_fuel_level();
  const ::f1x::aasdk::proto::data::FuelLevel& fuel_level(int index) const;
  ::f1x::aasdk::proto::data::FuelLevel* add_fuel_level();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::FuelLevel >&
      fuel_level() const;

  // repeated .f1x.aasdk.proto.data.ParkingBrake parking_brake = 7;
  int parking_brake_size() const;
  void clear_parking_brake();
  static const int kParkingBrakeFieldNumber = 7;
  ::f1x::aasdk::proto::data::ParkingBrake* mutable_parking_brake(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ParkingBrake >*
      mutable_parking_brake();
  const ::f1x::aasdk::proto::data::ParkingBrake& parking_brake(int index) const;
  ::f1x::aasdk::proto::data::ParkingBrake* add_parking_brake();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ParkingBrake >&
      parking_brake() const;

  // repeated .f1x.aasdk.proto.data.Gear gear = 8;
  int gear_size() const;
  void clear_gear();
  static const int kGearFieldNumber = 8;
  ::f1x::aasdk::proto::data::Gear* mutable_gear(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gear >*
      mutable_gear();
  const ::f1x::aasdk::proto::data::Gear& gear(int index) const;
  ::f1x::aasdk::proto::data::Gear* add_gear();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gear >&
      gear() const;

  // repeated .f1x.aasdk.proto.data.Diagnostics diagnostics = 9;
  int diagnostics_size() const;
  void clear_diagnostics();
  static const int kDiagnosticsFieldNumber = 9;
  ::f1x::aasdk::proto::data::Diagnostics* mutable_diagnostics(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Diagnostics >*
      mutable_diagnostics();
  const ::f1x::aasdk::proto::data::Diagnostics& diagnostics(int index) const;
  ::f1x::aasdk::proto::data::Diagnostics* add_diagnostics();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Diagnostics >&
      diagnostics() const;

  // repeated .f1x.aasdk.proto.data.NightMode night_mode = 10;
  int night_mode_size() const;
  void clear_night_mode();
  static const int kNightModeFieldNumber = 10;
  ::f1x::aasdk::proto::data::NightMode* mutable_night_mode(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::NightMode >*
      mutable_night_mode();
  const ::f1x::aasdk::proto::data::NightMode& night_mode(int index) const;
  ::f1x::aasdk::proto::data::NightMode* add_night_mode();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::NightMode >&
      night_mode() const;

  // repeated .f1x.aasdk.proto.data.Environment enviorment = 11;
  int enviorment_size() const;
  void clear_enviorment();
  static const int kEnviormentFieldNumber = 11;
  ::f1x::aasdk::proto::data::Environment* mutable_enviorment(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Environment >*
      mutable_enviorment();
  const ::f1x::aasdk::proto::data::Environment& enviorment(int index) const;
  ::f1x::aasdk::proto::data::Environment* add_enviorment();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Environment >&
      enviorment() const;

  // repeated .f1x.aasdk.proto.data.HVAC hvac = 12;
  int hvac_size() const;
  void clear_hvac();
  static const int kHvacFieldNumber = 12;
  ::f1x::aasdk::proto::data::HVAC* mutable_hvac(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::HVAC >*
      mutable_hvac();
  const ::f1x::aasdk::proto::data::HVAC& hvac(int index) const;
  ::f1x::aasdk::proto::data::HVAC* add_hvac();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::HVAC >&
      hvac() const;

  // repeated .f1x.aasdk.proto.data.DrivingStatus driving_status = 13;
  int driving_status_size() const;
  void clear_driving_status();
  static const int kDrivingStatusFieldNumber = 13;
  ::f1x::aasdk::proto::data::DrivingStatus* mutable_driving_status(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::DrivingStatus >*
      mutable_driving_status();
  const ::f1x::aasdk::proto::data::DrivingStatus& driving_status(int index) const;
  ::f1x::aasdk::proto::data::DrivingStatus* add_driving_status();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::DrivingStatus >&
      driving_status() const;

  // repeated .f1x.aasdk.proto.data.SteeringWheel steering_wheel = 14;
  int steering_wheel_size() const;
  void clear_steering_wheel();
  static const int kSteeringWheelFieldNumber = 14;
  ::f1x::aasdk::proto::data::SteeringWheel* mutable_steering_wheel(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::SteeringWheel >*
      mutable_steering_wheel();
  const ::f1x::aasdk::proto::data::SteeringWheel& steering_wheel(int index) const;
  ::f1x::aasdk::proto::data::SteeringWheel* add_steering_wheel();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::SteeringWheel >&
      steering_wheel() const;

  // repeated .f1x.aasdk.proto.data.Passenger passenger = 15;
  int passenger_size() const;
  void clear_passenger();
  static const int kPassengerFieldNumber = 15;
  ::f1x::aasdk::proto::data::Passenger* mutable_passenger(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Passenger >*
      mutable_passenger();
  const ::f1x::aasdk::proto::data::Passenger& passenger(int index) const;
  ::f1x::aasdk::proto::data::Passenger* add_passenger();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Passenger >&
      passenger() const;

  // repeated .f1x.aasdk.proto.data.Door door = 16;
  int door_size() const;
  void clear_door();
  static const int kDoorFieldNumber = 16;
  ::f1x::aasdk::proto::data::Door* mutable_door(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Door >*
      mutable_door();
  const ::f1x::aasdk::proto::data::Door& door(int index) const;
  ::f1x::aasdk::proto::data::Door* add_door();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Door >&
      door() const;

  // repeated .f1x.aasdk.proto.data.Light light = 17;
  int light_size() const;
  void clear_light();
  static const int kLightFieldNumber = 17;
  ::f1x::aasdk::proto::data::Light* mutable_light(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Light >*
      mutable_light();
  const ::f1x::aasdk::proto::data::Light& light(int index) const;
  ::f1x::aasdk::proto::data::Light* add_light();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Light >&
      light() const;

  // repeated .f1x.aasdk.proto.data.Accel accel = 19;
  int accel_size() const;
  void clear_accel();
  static const int kAccelFieldNumber = 19;
  ::f1x::aasdk::proto::data::Accel* mutable_accel(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Accel >*
      mutable_accel();
  const ::f1x::aasdk::proto::data::Accel& accel(int index) const;
  ::f1x::aasdk::proto::data::Accel* add_accel();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Accel >&
      accel() const;

  // repeated .f1x.aasdk.proto.data.Gyro gyro = 20;
  int gyro_size() const;
  void clear_gyro();
  static const int kGyroFieldNumber = 20;
  ::f1x::aasdk::proto::data::Gyro* mutable_gyro(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gyro >*
      mutable_gyro();
  const ::f1x::aasdk::proto::data::Gyro& gyro(int index) const;
  ::f1x::aasdk::proto::data::Gyro* add_gyro();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gyro >&
      gyro() const;

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.messages.SensorEventIndication)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::GPSLocation > gps_location_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Compass > compass_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Speed > speed_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::RPM > rpm_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Odometer > odometer_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::FuelLevel > fuel_level_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ParkingBrake > parking_brake_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gear > gear_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Diagnostics > diagnostics_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::NightMode > night_mode_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Environment > enviorment_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::HVAC > hvac_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::DrivingStatus > driving_status_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::SteeringWheel > steering_wheel_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Passenger > passenger_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Door > door_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Light > light_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Accel > accel_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gyro > gyro_;
  friend struct ::protobuf_SensorEventIndicationMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SensorEventIndication

// repeated .f1x.aasdk.proto.data.GPSLocation gps_location = 1;
inline int SensorEventIndication::gps_location_size() const {
  return gps_location_.size();
}
inline ::f1x::aasdk::proto::data::GPSLocation* SensorEventIndication::mutable_gps_location(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.gps_location)
  return gps_location_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::GPSLocation >*
SensorEventIndication::mutable_gps_location() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.gps_location)
  return &gps_location_;
}
inline const ::f1x::aasdk::proto::data::GPSLocation& SensorEventIndication::gps_location(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.gps_location)
  return gps_location_.Get(index);
}
inline ::f1x::aasdk::proto::data::GPSLocation* SensorEventIndication::add_gps_location() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.gps_location)
  return gps_location_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::GPSLocation >&
SensorEventIndication::gps_location() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.gps_location)
  return gps_location_;
}

// repeated .f1x.aasdk.proto.data.Compass compass = 2;
inline int SensorEventIndication::compass_size() const {
  return compass_.size();
}
inline ::f1x::aasdk::proto::data::Compass* SensorEventIndication::mutable_compass(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.compass)
  return compass_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Compass >*
SensorEventIndication::mutable_compass() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.compass)
  return &compass_;
}
inline const ::f1x::aasdk::proto::data::Compass& SensorEventIndication::compass(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.compass)
  return compass_.Get(index);
}
inline ::f1x::aasdk::proto::data::Compass* SensorEventIndication::add_compass() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.compass)
  return compass_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Compass >&
SensorEventIndication::compass() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.compass)
  return compass_;
}

// repeated .f1x.aasdk.proto.data.Speed speed = 3;
inline int SensorEventIndication::speed_size() const {
  return speed_.size();
}
inline ::f1x::aasdk::proto::data::Speed* SensorEventIndication::mutable_speed(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.speed)
  return speed_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Speed >*
SensorEventIndication::mutable_speed() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.speed)
  return &speed_;
}
inline const ::f1x::aasdk::proto::data::Speed& SensorEventIndication::speed(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.speed)
  return speed_.Get(index);
}
inline ::f1x::aasdk::proto::data::Speed* SensorEventIndication::add_speed() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.speed)
  return speed_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Speed >&
SensorEventIndication::speed() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.speed)
  return speed_;
}

// repeated .f1x.aasdk.proto.data.RPM rpm = 4;
inline int SensorEventIndication::rpm_size() const {
  return rpm_.size();
}
inline ::f1x::aasdk::proto::data::RPM* SensorEventIndication::mutable_rpm(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.rpm)
  return rpm_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::RPM >*
SensorEventIndication::mutable_rpm() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.rpm)
  return &rpm_;
}
inline const ::f1x::aasdk::proto::data::RPM& SensorEventIndication::rpm(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.rpm)
  return rpm_.Get(index);
}
inline ::f1x::aasdk::proto::data::RPM* SensorEventIndication::add_rpm() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.rpm)
  return rpm_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::RPM >&
SensorEventIndication::rpm() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.rpm)
  return rpm_;
}

// repeated .f1x.aasdk.proto.data.Odometer odometer = 5;
inline int SensorEventIndication::odometer_size() const {
  return odometer_.size();
}
inline ::f1x::aasdk::proto::data::Odometer* SensorEventIndication::mutable_odometer(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.odometer)
  return odometer_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Odometer >*
SensorEventIndication::mutable_odometer() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.odometer)
  return &odometer_;
}
inline const ::f1x::aasdk::proto::data::Odometer& SensorEventIndication::odometer(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.odometer)
  return odometer_.Get(index);
}
inline ::f1x::aasdk::proto::data::Odometer* SensorEventIndication::add_odometer() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.odometer)
  return odometer_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Odometer >&
SensorEventIndication::odometer() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.odometer)
  return odometer_;
}

// repeated .f1x.aasdk.proto.data.FuelLevel fuel_level = 6;
inline int SensorEventIndication::fuel_level_size() const {
  return fuel_level_.size();
}
inline ::f1x::aasdk::proto::data::FuelLevel* SensorEventIndication::mutable_fuel_level(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.fuel_level)
  return fuel_level_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::FuelLevel >*
SensorEventIndication::mutable_fuel_level() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.fuel_level)
  return &fuel_level_;
}
inline const ::f1x::aasdk::proto::data::FuelLevel& SensorEventIndication::fuel_level(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.fuel_level)
  return fuel_level_.Get(index);
}
inline ::f1x::aasdk::proto::data::FuelLevel* SensorEventIndication::add_fuel_level() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.fuel_level)
  return fuel_level_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::FuelLevel >&
SensorEventIndication::fuel_level() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.fuel_level)
  return fuel_level_;
}

// repeated .f1x.aasdk.proto.data.ParkingBrake parking_brake = 7;
inline int SensorEventIndication::parking_brake_size() const {
  return parking_brake_.size();
}
inline ::f1x::aasdk::proto::data::ParkingBrake* SensorEventIndication::mutable_parking_brake(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.parking_brake)
  return parking_brake_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ParkingBrake >*
SensorEventIndication::mutable_parking_brake() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.parking_brake)
  return &parking_brake_;
}
inline const ::f1x::aasdk::proto::data::ParkingBrake& SensorEventIndication::parking_brake(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.parking_brake)
  return parking_brake_.Get(index);
}
inline ::f1x::aasdk::proto::data::ParkingBrake* SensorEventIndication::add_parking_brake() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.parking_brake)
  return parking_brake_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ParkingBrake >&
SensorEventIndication::parking_brake() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.parking_brake)
  return parking_brake_;
}

// repeated .f1x.aasdk.proto.data.Gear gear = 8;
inline int SensorEventIndication::gear_size() const {
  return gear_.size();
}
inline ::f1x::aasdk::proto::data::Gear* SensorEventIndication::mutable_gear(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.gear)
  return gear_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gear >*
SensorEventIndication::mutable_gear() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.gear)
  return &gear_;
}
inline const ::f1x::aasdk::proto::data::Gear& SensorEventIndication::gear(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.gear)
  return gear_.Get(index);
}
inline ::f1x::aasdk::proto::data::Gear* SensorEventIndication::add_gear() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.gear)
  return gear_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gear >&
SensorEventIndication::gear() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.gear)
  return gear_;
}

// repeated .f1x.aasdk.proto.data.Diagnostics diagnostics = 9;
inline int SensorEventIndication::diagnostics_size() const {
  return diagnostics_.size();
}
inline ::f1x::aasdk::proto::data::Diagnostics* SensorEventIndication::mutable_diagnostics(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.diagnostics)
  return diagnostics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Diagnostics >*
SensorEventIndication::mutable_diagnostics() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.diagnostics)
  return &diagnostics_;
}
inline const ::f1x::aasdk::proto::data::Diagnostics& SensorEventIndication::diagnostics(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.diagnostics)
  return diagnostics_.Get(index);
}
inline ::f1x::aasdk::proto::data::Diagnostics* SensorEventIndication::add_diagnostics() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.diagnostics)
  return diagnostics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Diagnostics >&
SensorEventIndication::diagnostics() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.diagnostics)
  return diagnostics_;
}

// repeated .f1x.aasdk.proto.data.NightMode night_mode = 10;
inline int SensorEventIndication::night_mode_size() const {
  return night_mode_.size();
}
inline ::f1x::aasdk::proto::data::NightMode* SensorEventIndication::mutable_night_mode(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.night_mode)
  return night_mode_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::NightMode >*
SensorEventIndication::mutable_night_mode() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.night_mode)
  return &night_mode_;
}
inline const ::f1x::aasdk::proto::data::NightMode& SensorEventIndication::night_mode(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.night_mode)
  return night_mode_.Get(index);
}
inline ::f1x::aasdk::proto::data::NightMode* SensorEventIndication::add_night_mode() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.night_mode)
  return night_mode_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::NightMode >&
SensorEventIndication::night_mode() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.night_mode)
  return night_mode_;
}

// repeated .f1x.aasdk.proto.data.Environment enviorment = 11;
inline int SensorEventIndication::enviorment_size() const {
  return enviorment_.size();
}
inline ::f1x::aasdk::proto::data::Environment* SensorEventIndication::mutable_enviorment(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.enviorment)
  return enviorment_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Environment >*
SensorEventIndication::mutable_enviorment() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.enviorment)
  return &enviorment_;
}
inline const ::f1x::aasdk::proto::data::Environment& SensorEventIndication::enviorment(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.enviorment)
  return enviorment_.Get(index);
}
inline ::f1x::aasdk::proto::data::Environment* SensorEventIndication::add_enviorment() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.enviorment)
  return enviorment_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Environment >&
SensorEventIndication::enviorment() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.enviorment)
  return enviorment_;
}

// repeated .f1x.aasdk.proto.data.HVAC hvac = 12;
inline int SensorEventIndication::hvac_size() const {
  return hvac_.size();
}
inline ::f1x::aasdk::proto::data::HVAC* SensorEventIndication::mutable_hvac(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.hvac)
  return hvac_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::HVAC >*
SensorEventIndication::mutable_hvac() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.hvac)
  return &hvac_;
}
inline const ::f1x::aasdk::proto::data::HVAC& SensorEventIndication::hvac(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.hvac)
  return hvac_.Get(index);
}
inline ::f1x::aasdk::proto::data::HVAC* SensorEventIndication::add_hvac() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.hvac)
  return hvac_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::HVAC >&
SensorEventIndication::hvac() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.hvac)
  return hvac_;
}

// repeated .f1x.aasdk.proto.data.DrivingStatus driving_status = 13;
inline int SensorEventIndication::driving_status_size() const {
  return driving_status_.size();
}
inline ::f1x::aasdk::proto::data::DrivingStatus* SensorEventIndication::mutable_driving_status(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.driving_status)
  return driving_status_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::DrivingStatus >*
SensorEventIndication::mutable_driving_status() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.driving_status)
  return &driving_status_;
}
inline const ::f1x::aasdk::proto::data::DrivingStatus& SensorEventIndication::driving_status(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.driving_status)
  return driving_status_.Get(index);
}
inline ::f1x::aasdk::proto::data::DrivingStatus* SensorEventIndication::add_driving_status() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.driving_status)
  return driving_status_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::DrivingStatus >&
SensorEventIndication::driving_status() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.driving_status)
  return driving_status_;
}

// repeated .f1x.aasdk.proto.data.SteeringWheel steering_wheel = 14;
inline int SensorEventIndication::steering_wheel_size() const {
  return steering_wheel_.size();
}
inline ::f1x::aasdk::proto::data::SteeringWheel* SensorEventIndication::mutable_steering_wheel(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.steering_wheel)
  return steering_wheel_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::SteeringWheel >*
SensorEventIndication::mutable_steering_wheel() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.steering_wheel)
  return &steering_wheel_;
}
inline const ::f1x::aasdk::proto::data::SteeringWheel& SensorEventIndication::steering_wheel(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.steering_wheel)
  return steering_wheel_.Get(index);
}
inline ::f1x::aasdk::proto::data::SteeringWheel* SensorEventIndication::add_steering_wheel() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.steering_wheel)
  return steering_wheel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::SteeringWheel >&
SensorEventIndication::steering_wheel() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.steering_wheel)
  return steering_wheel_;
}

// repeated .f1x.aasdk.proto.data.Passenger passenger = 15;
inline int SensorEventIndication::passenger_size() const {
  return passenger_.size();
}
inline ::f1x::aasdk::proto::data::Passenger* SensorEventIndication::mutable_passenger(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.passenger)
  return passenger_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Passenger >*
SensorEventIndication::mutable_passenger() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.passenger)
  return &passenger_;
}
inline const ::f1x::aasdk::proto::data::Passenger& SensorEventIndication::passenger(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.passenger)
  return passenger_.Get(index);
}
inline ::f1x::aasdk::proto::data::Passenger* SensorEventIndication::add_passenger() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.passenger)
  return passenger_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Passenger >&
SensorEventIndication::passenger() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.passenger)
  return passenger_;
}

// repeated .f1x.aasdk.proto.data.Door door = 16;
inline int SensorEventIndication::door_size() const {
  return door_.size();
}
inline ::f1x::aasdk::proto::data::Door* SensorEventIndication::mutable_door(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.door)
  return door_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Door >*
SensorEventIndication::mutable_door() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.door)
  return &door_;
}
inline const ::f1x::aasdk::proto::data::Door& SensorEventIndication::door(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.door)
  return door_.Get(index);
}
inline ::f1x::aasdk::proto::data::Door* SensorEventIndication::add_door() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.door)
  return door_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Door >&
SensorEventIndication::door() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.door)
  return door_;
}

// repeated .f1x.aasdk.proto.data.Light light = 17;
inline int SensorEventIndication::light_size() const {
  return light_.size();
}
inline ::f1x::aasdk::proto::data::Light* SensorEventIndication::mutable_light(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.light)
  return light_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Light >*
SensorEventIndication::mutable_light() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.light)
  return &light_;
}
inline const ::f1x::aasdk::proto::data::Light& SensorEventIndication::light(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.light)
  return light_.Get(index);
}
inline ::f1x::aasdk::proto::data::Light* SensorEventIndication::add_light() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.light)
  return light_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Light >&
SensorEventIndication::light() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.light)
  return light_;
}

// repeated .f1x.aasdk.proto.data.Accel accel = 19;
inline int SensorEventIndication::accel_size() const {
  return accel_.size();
}
inline ::f1x::aasdk::proto::data::Accel* SensorEventIndication::mutable_accel(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.accel)
  return accel_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Accel >*
SensorEventIndication::mutable_accel() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.accel)
  return &accel_;
}
inline const ::f1x::aasdk::proto::data::Accel& SensorEventIndication::accel(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.accel)
  return accel_.Get(index);
}
inline ::f1x::aasdk::proto::data::Accel* SensorEventIndication::add_accel() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.accel)
  return accel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Accel >&
SensorEventIndication::accel() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.accel)
  return accel_;
}

// repeated .f1x.aasdk.proto.data.Gyro gyro = 20;
inline int SensorEventIndication::gyro_size() const {
  return gyro_.size();
}
inline ::f1x::aasdk::proto::data::Gyro* SensorEventIndication::mutable_gyro(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.SensorEventIndication.gyro)
  return gyro_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gyro >*
SensorEventIndication::mutable_gyro() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.SensorEventIndication.gyro)
  return &gyro_;
}
inline const ::f1x::aasdk::proto::data::Gyro& SensorEventIndication::gyro(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.SensorEventIndication.gyro)
  return gyro_.Get(index);
}
inline ::f1x::aasdk::proto::data::Gyro* SensorEventIndication::add_gyro() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.SensorEventIndication.gyro)
  return gyro_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::Gyro >&
SensorEventIndication::gyro() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.SensorEventIndication.gyro)
  return gyro_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_SensorEventIndicationMessage_2eproto
