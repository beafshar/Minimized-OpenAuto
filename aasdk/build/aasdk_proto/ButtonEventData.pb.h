// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ButtonEventData.proto

#ifndef PROTOBUF_INCLUDED_ButtonEventData_2eproto
#define PROTOBUF_INCLUDED_ButtonEventData_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ButtonEventData_2eproto 

namespace protobuf_ButtonEventData_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ButtonEventData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {
class ButtonEvent;
class ButtonEventDefaultTypeInternal;
extern ButtonEventDefaultTypeInternal _ButtonEvent_default_instance_;
}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::data::ButtonEvent* Arena::CreateMaybeMessage<::f1x::aasdk::proto::data::ButtonEvent>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {

// ===================================================================

class ButtonEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.data.ButtonEvent) */ {
 public:
  ButtonEvent();
  virtual ~ButtonEvent();

  ButtonEvent(const ButtonEvent& from);

  inline ButtonEvent& operator=(const ButtonEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ButtonEvent(ButtonEvent&& from) noexcept
    : ButtonEvent() {
    *this = ::std::move(from);
  }

  inline ButtonEvent& operator=(ButtonEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ButtonEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ButtonEvent* internal_default_instance() {
    return reinterpret_cast<const ButtonEvent*>(
               &_ButtonEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ButtonEvent* other);
  friend void swap(ButtonEvent& a, ButtonEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ButtonEvent* New() const final {
    return CreateMaybeMessage<ButtonEvent>(NULL);
  }

  ButtonEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ButtonEvent>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ButtonEvent& from);
  void MergeFrom(const ButtonEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ButtonEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 scan_code = 1;
  bool has_scan_code() const;
  void clear_scan_code();
  static const int kScanCodeFieldNumber = 1;
  ::google::protobuf::uint32 scan_code() const;
  void set_scan_code(::google::protobuf::uint32 value);

  // optional uint32 meta = 3;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 3;
  ::google::protobuf::uint32 meta() const;
  void set_meta(::google::protobuf::uint32 value);

  // required bool is_pressed = 2;
  bool has_is_pressed() const;
  void clear_is_pressed();
  static const int kIsPressedFieldNumber = 2;
  bool is_pressed() const;
  void set_is_pressed(bool value);

  // optional bool long_press = 4;
  bool has_long_press() const;
  void clear_long_press();
  static const int kLongPressFieldNumber = 4;
  bool long_press() const;
  void set_long_press(bool value);

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.data.ButtonEvent)
 private:
  void set_has_scan_code();
  void clear_has_scan_code();
  void set_has_is_pressed();
  void clear_has_is_pressed();
  void set_has_meta();
  void clear_has_meta();
  void set_has_long_press();
  void clear_has_long_press();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 scan_code_;
  ::google::protobuf::uint32 meta_;
  bool is_pressed_;
  bool long_press_;
  friend struct ::protobuf_ButtonEventData_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ButtonEvent

// required uint32 scan_code = 1;
inline bool ButtonEvent::has_scan_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ButtonEvent::set_has_scan_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ButtonEvent::clear_has_scan_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ButtonEvent::clear_scan_code() {
  scan_code_ = 0u;
  clear_has_scan_code();
}
inline ::google::protobuf::uint32 ButtonEvent::scan_code() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.ButtonEvent.scan_code)
  return scan_code_;
}
inline void ButtonEvent::set_scan_code(::google::protobuf::uint32 value) {
  set_has_scan_code();
  scan_code_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.ButtonEvent.scan_code)
}

// required bool is_pressed = 2;
inline bool ButtonEvent::has_is_pressed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ButtonEvent::set_has_is_pressed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ButtonEvent::clear_has_is_pressed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ButtonEvent::clear_is_pressed() {
  is_pressed_ = false;
  clear_has_is_pressed();
}
inline bool ButtonEvent::is_pressed() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.ButtonEvent.is_pressed)
  return is_pressed_;
}
inline void ButtonEvent::set_is_pressed(bool value) {
  set_has_is_pressed();
  is_pressed_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.ButtonEvent.is_pressed)
}

// optional uint32 meta = 3;
inline bool ButtonEvent::has_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ButtonEvent::set_has_meta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ButtonEvent::clear_has_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ButtonEvent::clear_meta() {
  meta_ = 0u;
  clear_has_meta();
}
inline ::google::protobuf::uint32 ButtonEvent::meta() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.ButtonEvent.meta)
  return meta_;
}
inline void ButtonEvent::set_meta(::google::protobuf::uint32 value) {
  set_has_meta();
  meta_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.ButtonEvent.meta)
}

// optional bool long_press = 4;
inline bool ButtonEvent::has_long_press() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ButtonEvent::set_has_long_press() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ButtonEvent::clear_has_long_press() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ButtonEvent::clear_long_press() {
  long_press_ = false;
  clear_has_long_press();
}
inline bool ButtonEvent::long_press() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.ButtonEvent.long_press)
  return long_press_;
}
inline void ButtonEvent::set_long_press(bool value) {
  set_has_long_press();
  long_press_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.ButtonEvent.long_press)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ButtonEventData_2eproto
