// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AVChannelSetupResponseMessage.proto

#ifndef PROTOBUF_INCLUDED_AVChannelSetupResponseMessage_2eproto
#define PROTOBUF_INCLUDED_AVChannelSetupResponseMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "AVChannelSetupStatusEnum.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_AVChannelSetupResponseMessage_2eproto 

namespace protobuf_AVChannelSetupResponseMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_AVChannelSetupResponseMessage_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class AVChannelSetupResponse;
class AVChannelSetupResponseDefaultTypeInternal;
extern AVChannelSetupResponseDefaultTypeInternal _AVChannelSetupResponse_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::messages::AVChannelSetupResponse* Arena::CreateMaybeMessage<::f1x::aasdk::proto::messages::AVChannelSetupResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

class AVChannelSetupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.messages.AVChannelSetupResponse) */ {
 public:
  AVChannelSetupResponse();
  virtual ~AVChannelSetupResponse();

  AVChannelSetupResponse(const AVChannelSetupResponse& from);

  inline AVChannelSetupResponse& operator=(const AVChannelSetupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AVChannelSetupResponse(AVChannelSetupResponse&& from) noexcept
    : AVChannelSetupResponse() {
    *this = ::std::move(from);
  }

  inline AVChannelSetupResponse& operator=(AVChannelSetupResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AVChannelSetupResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AVChannelSetupResponse* internal_default_instance() {
    return reinterpret_cast<const AVChannelSetupResponse*>(
               &_AVChannelSetupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AVChannelSetupResponse* other);
  friend void swap(AVChannelSetupResponse& a, AVChannelSetupResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AVChannelSetupResponse* New() const final {
    return CreateMaybeMessage<AVChannelSetupResponse>(NULL);
  }

  AVChannelSetupResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AVChannelSetupResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AVChannelSetupResponse& from);
  void MergeFrom(const AVChannelSetupResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AVChannelSetupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 configs = 3;
  int configs_size() const;
  void clear_configs();
  static const int kConfigsFieldNumber = 3;
  ::google::protobuf::uint32 configs(int index) const;
  void set_configs(int index, ::google::protobuf::uint32 value);
  void add_configs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      configs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_configs();

  // required .f1x.aasdk.proto.enums.AVChannelSetupStatus.Enum media_status = 1;
  bool has_media_status() const;
  void clear_media_status();
  static const int kMediaStatusFieldNumber = 1;
  ::f1x::aasdk::proto::enums::AVChannelSetupStatus_Enum media_status() const;
  void set_media_status(::f1x::aasdk::proto::enums::AVChannelSetupStatus_Enum value);

  // required uint32 max_unacked = 2;
  bool has_max_unacked() const;
  void clear_max_unacked();
  static const int kMaxUnackedFieldNumber = 2;
  ::google::protobuf::uint32 max_unacked() const;
  void set_max_unacked(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.messages.AVChannelSetupResponse)
 private:
  void set_has_media_status();
  void clear_has_media_status();
  void set_has_max_unacked();
  void clear_has_max_unacked();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > configs_;
  int media_status_;
  ::google::protobuf::uint32 max_unacked_;
  friend struct ::protobuf_AVChannelSetupResponseMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AVChannelSetupResponse

// required .f1x.aasdk.proto.enums.AVChannelSetupStatus.Enum media_status = 1;
inline bool AVChannelSetupResponse::has_media_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AVChannelSetupResponse::set_has_media_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AVChannelSetupResponse::clear_has_media_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AVChannelSetupResponse::clear_media_status() {
  media_status_ = 0;
  clear_has_media_status();
}
inline ::f1x::aasdk::proto::enums::AVChannelSetupStatus_Enum AVChannelSetupResponse::media_status() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.AVChannelSetupResponse.media_status)
  return static_cast< ::f1x::aasdk::proto::enums::AVChannelSetupStatus_Enum >(media_status_);
}
inline void AVChannelSetupResponse::set_media_status(::f1x::aasdk::proto::enums::AVChannelSetupStatus_Enum value) {
  assert(::f1x::aasdk::proto::enums::AVChannelSetupStatus_Enum_IsValid(value));
  set_has_media_status();
  media_status_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.AVChannelSetupResponse.media_status)
}

// required uint32 max_unacked = 2;
inline bool AVChannelSetupResponse::has_max_unacked() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AVChannelSetupResponse::set_has_max_unacked() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AVChannelSetupResponse::clear_has_max_unacked() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AVChannelSetupResponse::clear_max_unacked() {
  max_unacked_ = 0u;
  clear_has_max_unacked();
}
inline ::google::protobuf::uint32 AVChannelSetupResponse::max_unacked() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.AVChannelSetupResponse.max_unacked)
  return max_unacked_;
}
inline void AVChannelSetupResponse::set_max_unacked(::google::protobuf::uint32 value) {
  set_has_max_unacked();
  max_unacked_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.AVChannelSetupResponse.max_unacked)
}

// repeated uint32 configs = 3;
inline int AVChannelSetupResponse::configs_size() const {
  return configs_.size();
}
inline void AVChannelSetupResponse::clear_configs() {
  configs_.Clear();
}
inline ::google::protobuf::uint32 AVChannelSetupResponse::configs(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.AVChannelSetupResponse.configs)
  return configs_.Get(index);
}
inline void AVChannelSetupResponse::set_configs(int index, ::google::protobuf::uint32 value) {
  configs_.Set(index, value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.AVChannelSetupResponse.configs)
}
inline void AVChannelSetupResponse::add_configs(::google::protobuf::uint32 value) {
  configs_.Add(value);
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.AVChannelSetupResponse.configs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AVChannelSetupResponse::configs() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.AVChannelSetupResponse.configs)
  return configs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AVChannelSetupResponse::mutable_configs() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.AVChannelSetupResponse.configs)
  return &configs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_AVChannelSetupResponseMessage_2eproto
