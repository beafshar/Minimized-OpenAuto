// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServiceDiscoveryResponseMessage.proto

#ifndef PROTOBUF_INCLUDED_ServiceDiscoveryResponseMessage_2eproto
#define PROTOBUF_INCLUDED_ServiceDiscoveryResponseMessage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ChannelDescriptorData.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ServiceDiscoveryResponseMessage_2eproto 

namespace protobuf_ServiceDiscoveryResponseMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ServiceDiscoveryResponseMessage_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class ServiceDiscoveryResponse;
class ServiceDiscoveryResponseDefaultTypeInternal;
extern ServiceDiscoveryResponseDefaultTypeInternal _ServiceDiscoveryResponse_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::messages::ServiceDiscoveryResponse* Arena::CreateMaybeMessage<::f1x::aasdk::proto::messages::ServiceDiscoveryResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

class ServiceDiscoveryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.messages.ServiceDiscoveryResponse) */ {
 public:
  ServiceDiscoveryResponse();
  virtual ~ServiceDiscoveryResponse();

  ServiceDiscoveryResponse(const ServiceDiscoveryResponse& from);

  inline ServiceDiscoveryResponse& operator=(const ServiceDiscoveryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServiceDiscoveryResponse(ServiceDiscoveryResponse&& from) noexcept
    : ServiceDiscoveryResponse() {
    *this = ::std::move(from);
  }

  inline ServiceDiscoveryResponse& operator=(ServiceDiscoveryResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServiceDiscoveryResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceDiscoveryResponse* internal_default_instance() {
    return reinterpret_cast<const ServiceDiscoveryResponse*>(
               &_ServiceDiscoveryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ServiceDiscoveryResponse* other);
  friend void swap(ServiceDiscoveryResponse& a, ServiceDiscoveryResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServiceDiscoveryResponse* New() const final {
    return CreateMaybeMessage<ServiceDiscoveryResponse>(NULL);
  }

  ServiceDiscoveryResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServiceDiscoveryResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServiceDiscoveryResponse& from);
  void MergeFrom(const ServiceDiscoveryResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceDiscoveryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .f1x.aasdk.proto.data.ChannelDescriptor channels = 1;
  int channels_size() const;
  void clear_channels();
  static const int kChannelsFieldNumber = 1;
  ::f1x::aasdk::proto::data::ChannelDescriptor* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ChannelDescriptor >*
      mutable_channels();
  const ::f1x::aasdk::proto::data::ChannelDescriptor& channels(int index) const;
  ::f1x::aasdk::proto::data::ChannelDescriptor* add_channels();
  const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ChannelDescriptor >&
      channels() const;

  // required string head_unit_name = 2;
  bool has_head_unit_name() const;
  void clear_head_unit_name();
  static const int kHeadUnitNameFieldNumber = 2;
  const ::std::string& head_unit_name() const;
  void set_head_unit_name(const ::std::string& value);
  #if LANG_CXX11
  void set_head_unit_name(::std::string&& value);
  #endif
  void set_head_unit_name(const char* value);
  void set_head_unit_name(const char* value, size_t size);
  ::std::string* mutable_head_unit_name();
  ::std::string* release_head_unit_name();
  void set_allocated_head_unit_name(::std::string* head_unit_name);

  // required string car_model = 3;
  bool has_car_model() const;
  void clear_car_model();
  static const int kCarModelFieldNumber = 3;
  const ::std::string& car_model() const;
  void set_car_model(const ::std::string& value);
  #if LANG_CXX11
  void set_car_model(::std::string&& value);
  #endif
  void set_car_model(const char* value);
  void set_car_model(const char* value, size_t size);
  ::std::string* mutable_car_model();
  ::std::string* release_car_model();
  void set_allocated_car_model(::std::string* car_model);

  // required string car_year = 4;
  bool has_car_year() const;
  void clear_car_year();
  static const int kCarYearFieldNumber = 4;
  const ::std::string& car_year() const;
  void set_car_year(const ::std::string& value);
  #if LANG_CXX11
  void set_car_year(::std::string&& value);
  #endif
  void set_car_year(const char* value);
  void set_car_year(const char* value, size_t size);
  ::std::string* mutable_car_year();
  ::std::string* release_car_year();
  void set_allocated_car_year(::std::string* car_year);

  // required string car_serial = 5;
  bool has_car_serial() const;
  void clear_car_serial();
  static const int kCarSerialFieldNumber = 5;
  const ::std::string& car_serial() const;
  void set_car_serial(const ::std::string& value);
  #if LANG_CXX11
  void set_car_serial(::std::string&& value);
  #endif
  void set_car_serial(const char* value);
  void set_car_serial(const char* value, size_t size);
  ::std::string* mutable_car_serial();
  ::std::string* release_car_serial();
  void set_allocated_car_serial(::std::string* car_serial);

  // required string headunit_manufacturer = 7;
  bool has_headunit_manufacturer() const;
  void clear_headunit_manufacturer();
  static const int kHeadunitManufacturerFieldNumber = 7;
  const ::std::string& headunit_manufacturer() const;
  void set_headunit_manufacturer(const ::std::string& value);
  #if LANG_CXX11
  void set_headunit_manufacturer(::std::string&& value);
  #endif
  void set_headunit_manufacturer(const char* value);
  void set_headunit_manufacturer(const char* value, size_t size);
  ::std::string* mutable_headunit_manufacturer();
  ::std::string* release_headunit_manufacturer();
  void set_allocated_headunit_manufacturer(::std::string* headunit_manufacturer);

  // required string headunit_model = 8;
  bool has_headunit_model() const;
  void clear_headunit_model();
  static const int kHeadunitModelFieldNumber = 8;
  const ::std::string& headunit_model() const;
  void set_headunit_model(const ::std::string& value);
  #if LANG_CXX11
  void set_headunit_model(::std::string&& value);
  #endif
  void set_headunit_model(const char* value);
  void set_headunit_model(const char* value, size_t size);
  ::std::string* mutable_headunit_model();
  ::std::string* release_headunit_model();
  void set_allocated_headunit_model(::std::string* headunit_model);

  // required string sw_build = 9;
  bool has_sw_build() const;
  void clear_sw_build();
  static const int kSwBuildFieldNumber = 9;
  const ::std::string& sw_build() const;
  void set_sw_build(const ::std::string& value);
  #if LANG_CXX11
  void set_sw_build(::std::string&& value);
  #endif
  void set_sw_build(const char* value);
  void set_sw_build(const char* value, size_t size);
  ::std::string* mutable_sw_build();
  ::std::string* release_sw_build();
  void set_allocated_sw_build(::std::string* sw_build);

  // required string sw_version = 10;
  bool has_sw_version() const;
  void clear_sw_version();
  static const int kSwVersionFieldNumber = 10;
  const ::std::string& sw_version() const;
  void set_sw_version(const ::std::string& value);
  #if LANG_CXX11
  void set_sw_version(::std::string&& value);
  #endif
  void set_sw_version(const char* value);
  void set_sw_version(const char* value, size_t size);
  ::std::string* mutable_sw_version();
  ::std::string* release_sw_version();
  void set_allocated_sw_version(::std::string* sw_version);

  // required bool left_hand_drive_vehicle = 6;
  bool has_left_hand_drive_vehicle() const;
  void clear_left_hand_drive_vehicle();
  static const int kLeftHandDriveVehicleFieldNumber = 6;
  bool left_hand_drive_vehicle() const;
  void set_left_hand_drive_vehicle(bool value);

  // required bool can_play_native_media_during_vr = 11;
  bool has_can_play_native_media_during_vr() const;
  void clear_can_play_native_media_during_vr();
  static const int kCanPlayNativeMediaDuringVrFieldNumber = 11;
  bool can_play_native_media_during_vr() const;
  void set_can_play_native_media_during_vr(bool value);

  // optional bool hide_clock = 12;
  bool has_hide_clock() const;
  void clear_hide_clock();
  static const int kHideClockFieldNumber = 12;
  bool hide_clock() const;
  void set_hide_clock(bool value);

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
 private:
  void set_has_head_unit_name();
  void clear_has_head_unit_name();
  void set_has_car_model();
  void clear_has_car_model();
  void set_has_car_year();
  void clear_has_car_year();
  void set_has_car_serial();
  void clear_has_car_serial();
  void set_has_left_hand_drive_vehicle();
  void clear_has_left_hand_drive_vehicle();
  void set_has_headunit_manufacturer();
  void clear_has_headunit_manufacturer();
  void set_has_headunit_model();
  void clear_has_headunit_model();
  void set_has_sw_build();
  void clear_has_sw_build();
  void set_has_sw_version();
  void clear_has_sw_version();
  void set_has_can_play_native_media_during_vr();
  void clear_has_can_play_native_media_during_vr();
  void set_has_hide_clock();
  void clear_has_hide_clock();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ChannelDescriptor > channels_;
  ::google::protobuf::internal::ArenaStringPtr head_unit_name_;
  ::google::protobuf::internal::ArenaStringPtr car_model_;
  ::google::protobuf::internal::ArenaStringPtr car_year_;
  ::google::protobuf::internal::ArenaStringPtr car_serial_;
  ::google::protobuf::internal::ArenaStringPtr headunit_manufacturer_;
  ::google::protobuf::internal::ArenaStringPtr headunit_model_;
  ::google::protobuf::internal::ArenaStringPtr sw_build_;
  ::google::protobuf::internal::ArenaStringPtr sw_version_;
  bool left_hand_drive_vehicle_;
  bool can_play_native_media_during_vr_;
  bool hide_clock_;
  friend struct ::protobuf_ServiceDiscoveryResponseMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServiceDiscoveryResponse

// repeated .f1x.aasdk.proto.data.ChannelDescriptor channels = 1;
inline int ServiceDiscoveryResponse::channels_size() const {
  return channels_.size();
}
inline ::f1x::aasdk::proto::data::ChannelDescriptor* ServiceDiscoveryResponse::mutable_channels(int index) {
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.channels)
  return channels_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ChannelDescriptor >*
ServiceDiscoveryResponse::mutable_channels() {
  // @@protoc_insertion_point(field_mutable_list:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.channels)
  return &channels_;
}
inline const ::f1x::aasdk::proto::data::ChannelDescriptor& ServiceDiscoveryResponse::channels(int index) const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.channels)
  return channels_.Get(index);
}
inline ::f1x::aasdk::proto::data::ChannelDescriptor* ServiceDiscoveryResponse::add_channels() {
  // @@protoc_insertion_point(field_add:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.channels)
  return channels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::f1x::aasdk::proto::data::ChannelDescriptor >&
ServiceDiscoveryResponse::channels() const {
  // @@protoc_insertion_point(field_list:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.channels)
  return channels_;
}

// required string head_unit_name = 2;
inline bool ServiceDiscoveryResponse::has_head_unit_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_head_unit_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServiceDiscoveryResponse::clear_has_head_unit_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServiceDiscoveryResponse::clear_head_unit_name() {
  head_unit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_head_unit_name();
}
inline const ::std::string& ServiceDiscoveryResponse::head_unit_name() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
  return head_unit_name_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_head_unit_name(const ::std::string& value) {
  set_has_head_unit_name();
  head_unit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_head_unit_name(::std::string&& value) {
  set_has_head_unit_name();
  head_unit_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
}
#endif
inline void ServiceDiscoveryResponse::set_head_unit_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_head_unit_name();
  head_unit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
}
inline void ServiceDiscoveryResponse::set_head_unit_name(const char* value, size_t size) {
  set_has_head_unit_name();
  head_unit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_head_unit_name() {
  set_has_head_unit_name();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
  return head_unit_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_head_unit_name() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
  if (!has_head_unit_name()) {
    return NULL;
  }
  clear_has_head_unit_name();
  return head_unit_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_head_unit_name(::std::string* head_unit_name) {
  if (head_unit_name != NULL) {
    set_has_head_unit_name();
  } else {
    clear_has_head_unit_name();
  }
  head_unit_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head_unit_name);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name)
}

// required string car_model = 3;
inline bool ServiceDiscoveryResponse::has_car_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_car_model() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServiceDiscoveryResponse::clear_has_car_model() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServiceDiscoveryResponse::clear_car_model() {
  car_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_model();
}
inline const ::std::string& ServiceDiscoveryResponse::car_model() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
  return car_model_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_car_model(const ::std::string& value) {
  set_has_car_model();
  car_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_car_model(::std::string&& value) {
  set_has_car_model();
  car_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
}
#endif
inline void ServiceDiscoveryResponse::set_car_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_car_model();
  car_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
}
inline void ServiceDiscoveryResponse::set_car_model(const char* value, size_t size) {
  set_has_car_model();
  car_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_car_model() {
  set_has_car_model();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
  return car_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_car_model() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
  if (!has_car_model()) {
    return NULL;
  }
  clear_has_car_model();
  return car_model_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_car_model(::std::string* car_model) {
  if (car_model != NULL) {
    set_has_car_model();
  } else {
    clear_has_car_model();
  }
  car_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_model);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model)
}

// required string car_year = 4;
inline bool ServiceDiscoveryResponse::has_car_year() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_car_year() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ServiceDiscoveryResponse::clear_has_car_year() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ServiceDiscoveryResponse::clear_car_year() {
  car_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_year();
}
inline const ::std::string& ServiceDiscoveryResponse::car_year() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
  return car_year_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_car_year(const ::std::string& value) {
  set_has_car_year();
  car_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_car_year(::std::string&& value) {
  set_has_car_year();
  car_year_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
}
#endif
inline void ServiceDiscoveryResponse::set_car_year(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_car_year();
  car_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
}
inline void ServiceDiscoveryResponse::set_car_year(const char* value, size_t size) {
  set_has_car_year();
  car_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_car_year() {
  set_has_car_year();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
  return car_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_car_year() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
  if (!has_car_year()) {
    return NULL;
  }
  clear_has_car_year();
  return car_year_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_car_year(::std::string* car_year) {
  if (car_year != NULL) {
    set_has_car_year();
  } else {
    clear_has_car_year();
  }
  car_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_year);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year)
}

// required string car_serial = 5;
inline bool ServiceDiscoveryResponse::has_car_serial() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_car_serial() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ServiceDiscoveryResponse::clear_has_car_serial() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ServiceDiscoveryResponse::clear_car_serial() {
  car_serial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_car_serial();
}
inline const ::std::string& ServiceDiscoveryResponse::car_serial() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
  return car_serial_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_car_serial(const ::std::string& value) {
  set_has_car_serial();
  car_serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_car_serial(::std::string&& value) {
  set_has_car_serial();
  car_serial_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
}
#endif
inline void ServiceDiscoveryResponse::set_car_serial(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_car_serial();
  car_serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
}
inline void ServiceDiscoveryResponse::set_car_serial(const char* value, size_t size) {
  set_has_car_serial();
  car_serial_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_car_serial() {
  set_has_car_serial();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
  return car_serial_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_car_serial() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
  if (!has_car_serial()) {
    return NULL;
  }
  clear_has_car_serial();
  return car_serial_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_car_serial(::std::string* car_serial) {
  if (car_serial != NULL) {
    set_has_car_serial();
  } else {
    clear_has_car_serial();
  }
  car_serial_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), car_serial);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial)
}

// required bool left_hand_drive_vehicle = 6;
inline bool ServiceDiscoveryResponse::has_left_hand_drive_vehicle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_left_hand_drive_vehicle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ServiceDiscoveryResponse::clear_has_left_hand_drive_vehicle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ServiceDiscoveryResponse::clear_left_hand_drive_vehicle() {
  left_hand_drive_vehicle_ = false;
  clear_has_left_hand_drive_vehicle();
}
inline bool ServiceDiscoveryResponse::left_hand_drive_vehicle() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.left_hand_drive_vehicle)
  return left_hand_drive_vehicle_;
}
inline void ServiceDiscoveryResponse::set_left_hand_drive_vehicle(bool value) {
  set_has_left_hand_drive_vehicle();
  left_hand_drive_vehicle_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.left_hand_drive_vehicle)
}

// required string headunit_manufacturer = 7;
inline bool ServiceDiscoveryResponse::has_headunit_manufacturer() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_headunit_manufacturer() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ServiceDiscoveryResponse::clear_has_headunit_manufacturer() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ServiceDiscoveryResponse::clear_headunit_manufacturer() {
  headunit_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headunit_manufacturer();
}
inline const ::std::string& ServiceDiscoveryResponse::headunit_manufacturer() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
  return headunit_manufacturer_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_headunit_manufacturer(const ::std::string& value) {
  set_has_headunit_manufacturer();
  headunit_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_headunit_manufacturer(::std::string&& value) {
  set_has_headunit_manufacturer();
  headunit_manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
}
#endif
inline void ServiceDiscoveryResponse::set_headunit_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_headunit_manufacturer();
  headunit_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
}
inline void ServiceDiscoveryResponse::set_headunit_manufacturer(const char* value, size_t size) {
  set_has_headunit_manufacturer();
  headunit_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_headunit_manufacturer() {
  set_has_headunit_manufacturer();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
  return headunit_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_headunit_manufacturer() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
  if (!has_headunit_manufacturer()) {
    return NULL;
  }
  clear_has_headunit_manufacturer();
  return headunit_manufacturer_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_headunit_manufacturer(::std::string* headunit_manufacturer) {
  if (headunit_manufacturer != NULL) {
    set_has_headunit_manufacturer();
  } else {
    clear_has_headunit_manufacturer();
  }
  headunit_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headunit_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer)
}

// required string headunit_model = 8;
inline bool ServiceDiscoveryResponse::has_headunit_model() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_headunit_model() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ServiceDiscoveryResponse::clear_has_headunit_model() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ServiceDiscoveryResponse::clear_headunit_model() {
  headunit_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headunit_model();
}
inline const ::std::string& ServiceDiscoveryResponse::headunit_model() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
  return headunit_model_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_headunit_model(const ::std::string& value) {
  set_has_headunit_model();
  headunit_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_headunit_model(::std::string&& value) {
  set_has_headunit_model();
  headunit_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
}
#endif
inline void ServiceDiscoveryResponse::set_headunit_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_headunit_model();
  headunit_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
}
inline void ServiceDiscoveryResponse::set_headunit_model(const char* value, size_t size) {
  set_has_headunit_model();
  headunit_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_headunit_model() {
  set_has_headunit_model();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
  return headunit_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_headunit_model() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
  if (!has_headunit_model()) {
    return NULL;
  }
  clear_has_headunit_model();
  return headunit_model_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_headunit_model(::std::string* headunit_model) {
  if (headunit_model != NULL) {
    set_has_headunit_model();
  } else {
    clear_has_headunit_model();
  }
  headunit_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headunit_model);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model)
}

// required string sw_build = 9;
inline bool ServiceDiscoveryResponse::has_sw_build() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_sw_build() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ServiceDiscoveryResponse::clear_has_sw_build() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ServiceDiscoveryResponse::clear_sw_build() {
  sw_build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sw_build();
}
inline const ::std::string& ServiceDiscoveryResponse::sw_build() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
  return sw_build_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_sw_build(const ::std::string& value) {
  set_has_sw_build();
  sw_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_sw_build(::std::string&& value) {
  set_has_sw_build();
  sw_build_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
}
#endif
inline void ServiceDiscoveryResponse::set_sw_build(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sw_build();
  sw_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
}
inline void ServiceDiscoveryResponse::set_sw_build(const char* value, size_t size) {
  set_has_sw_build();
  sw_build_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_sw_build() {
  set_has_sw_build();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
  return sw_build_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_sw_build() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
  if (!has_sw_build()) {
    return NULL;
  }
  clear_has_sw_build();
  return sw_build_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_sw_build(::std::string* sw_build) {
  if (sw_build != NULL) {
    set_has_sw_build();
  } else {
    clear_has_sw_build();
  }
  sw_build_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sw_build);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build)
}

// required string sw_version = 10;
inline bool ServiceDiscoveryResponse::has_sw_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_sw_version() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ServiceDiscoveryResponse::clear_has_sw_version() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ServiceDiscoveryResponse::clear_sw_version() {
  sw_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sw_version();
}
inline const ::std::string& ServiceDiscoveryResponse::sw_version() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
  return sw_version_.GetNoArena();
}
inline void ServiceDiscoveryResponse::set_sw_version(const ::std::string& value) {
  set_has_sw_version();
  sw_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
}
#if LANG_CXX11
inline void ServiceDiscoveryResponse::set_sw_version(::std::string&& value) {
  set_has_sw_version();
  sw_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
}
#endif
inline void ServiceDiscoveryResponse::set_sw_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sw_version();
  sw_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
}
inline void ServiceDiscoveryResponse::set_sw_version(const char* value, size_t size) {
  set_has_sw_version();
  sw_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
}
inline ::std::string* ServiceDiscoveryResponse::mutable_sw_version() {
  set_has_sw_version();
  // @@protoc_insertion_point(field_mutable:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
  return sw_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServiceDiscoveryResponse::release_sw_version() {
  // @@protoc_insertion_point(field_release:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
  if (!has_sw_version()) {
    return NULL;
  }
  clear_has_sw_version();
  return sw_version_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceDiscoveryResponse::set_allocated_sw_version(::std::string* sw_version) {
  if (sw_version != NULL) {
    set_has_sw_version();
  } else {
    clear_has_sw_version();
  }
  sw_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sw_version);
  // @@protoc_insertion_point(field_set_allocated:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version)
}

// required bool can_play_native_media_during_vr = 11;
inline bool ServiceDiscoveryResponse::has_can_play_native_media_during_vr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_can_play_native_media_during_vr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ServiceDiscoveryResponse::clear_has_can_play_native_media_during_vr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ServiceDiscoveryResponse::clear_can_play_native_media_during_vr() {
  can_play_native_media_during_vr_ = false;
  clear_has_can_play_native_media_during_vr();
}
inline bool ServiceDiscoveryResponse::can_play_native_media_during_vr() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.can_play_native_media_during_vr)
  return can_play_native_media_during_vr_;
}
inline void ServiceDiscoveryResponse::set_can_play_native_media_during_vr(bool value) {
  set_has_can_play_native_media_during_vr();
  can_play_native_media_during_vr_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.can_play_native_media_during_vr)
}

// optional bool hide_clock = 12;
inline bool ServiceDiscoveryResponse::has_hide_clock() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ServiceDiscoveryResponse::set_has_hide_clock() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ServiceDiscoveryResponse::clear_has_hide_clock() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ServiceDiscoveryResponse::clear_hide_clock() {
  hide_clock_ = false;
  clear_has_hide_clock();
}
inline bool ServiceDiscoveryResponse::hide_clock() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.hide_clock)
  return hide_clock_;
}
inline void ServiceDiscoveryResponse::set_hide_clock(bool value) {
  set_has_hide_clock();
  hide_clock_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.messages.ServiceDiscoveryResponse.hide_clock)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ServiceDiscoveryResponseMessage_2eproto
