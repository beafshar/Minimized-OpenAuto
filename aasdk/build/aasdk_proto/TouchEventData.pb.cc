// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TouchEventData.proto

#include "TouchEventData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_TouchLocationData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TouchLocationData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TouchLocation;
}  // namespace protobuf_TouchLocationData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {
class TouchEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TouchEvent>
      _instance;
} _TouchEvent_default_instance_;
}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace protobuf_TouchEventData_2eproto {
static void InitDefaultsTouchEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::f1x::aasdk::proto::data::_TouchEvent_default_instance_;
    new (ptr) ::f1x::aasdk::proto::data::TouchEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::f1x::aasdk::proto::data::TouchEvent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TouchEvent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTouchEvent}, {
      &protobuf_TouchLocationData_2eproto::scc_info_TouchLocation.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TouchEvent.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::data::TouchEvent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::data::TouchEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::data::TouchEvent, touch_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::data::TouchEvent, action_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::data::TouchEvent, touch_action_),
  ~0u,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::f1x::aasdk::proto::data::TouchEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::f1x::aasdk::proto::data::_TouchEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "TouchEventData.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024TouchEventData.proto\022\024f1x.aasdk.proto."
      "data\032\027TouchLocationData.proto\032\025TouchActi"
      "onEnum.proto\"\236\001\n\nTouchEvent\022;\n\016touch_loc"
      "ation\030\001 \003(\0132#.f1x.aasdk.proto.data.Touch"
      "Location\022\024\n\014action_index\030\002 \001(\r\022=\n\014touch_"
      "action\030\003 \002(\0162\'.f1x.aasdk.proto.enums.Tou"
      "chAction.Enum"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 253);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "TouchEventData.proto", &protobuf_RegisterTypes);
  ::protobuf_TouchLocationData_2eproto::AddDescriptors();
  ::protobuf_TouchActionEnum_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_TouchEventData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {

// ===================================================================

void TouchEvent::InitAsDefaultInstance() {
}
void TouchEvent::clear_touch_location() {
  touch_location_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TouchEvent::kTouchLocationFieldNumber;
const int TouchEvent::kActionIndexFieldNumber;
const int TouchEvent::kTouchActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TouchEvent::TouchEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_TouchEventData_2eproto::scc_info_TouchEvent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:f1x.aasdk.proto.data.TouchEvent)
}
TouchEvent::TouchEvent(const TouchEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      touch_location_(from.touch_location_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&action_index_, &from.action_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&touch_action_) -
    reinterpret_cast<char*>(&action_index_)) + sizeof(touch_action_));
  // @@protoc_insertion_point(copy_constructor:f1x.aasdk.proto.data.TouchEvent)
}

void TouchEvent::SharedCtor() {
  ::memset(&action_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&touch_action_) -
      reinterpret_cast<char*>(&action_index_)) + sizeof(touch_action_));
}

TouchEvent::~TouchEvent() {
  // @@protoc_insertion_point(destructor:f1x.aasdk.proto.data.TouchEvent)
  SharedDtor();
}

void TouchEvent::SharedDtor() {
}

void TouchEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TouchEvent::descriptor() {
  ::protobuf_TouchEventData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TouchEventData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TouchEvent& TouchEvent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_TouchEventData_2eproto::scc_info_TouchEvent.base);
  return *internal_default_instance();
}


void TouchEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:f1x.aasdk.proto.data.TouchEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  touch_location_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&action_index_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&touch_action_) -
        reinterpret_cast<char*>(&action_index_)) + sizeof(touch_action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TouchEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:f1x.aasdk.proto.data.TouchEvent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .f1x.aasdk.proto.data.TouchLocation touch_location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_touch_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 action_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_action_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .f1x.aasdk.proto.enums.TouchAction.Enum touch_action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::f1x::aasdk::proto::enums::TouchAction_Enum_IsValid(value)) {
            set_touch_action(static_cast< ::f1x::aasdk::proto::enums::TouchAction_Enum >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:f1x.aasdk.proto.data.TouchEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:f1x.aasdk.proto.data.TouchEvent)
  return false;
#undef DO_
}

void TouchEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:f1x.aasdk.proto.data.TouchEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .f1x.aasdk.proto.data.TouchLocation touch_location = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->touch_location_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->touch_location(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 action_index = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->action_index(), output);
  }

  // required .f1x.aasdk.proto.enums.TouchAction.Enum touch_action = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->touch_action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:f1x.aasdk.proto.data.TouchEvent)
}

::google::protobuf::uint8* TouchEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:f1x.aasdk.proto.data.TouchEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .f1x.aasdk.proto.data.TouchLocation touch_location = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->touch_location_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->touch_location(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 action_index = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->action_index(), target);
  }

  // required .f1x.aasdk.proto.enums.TouchAction.Enum touch_action = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->touch_action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:f1x.aasdk.proto.data.TouchEvent)
  return target;
}

size_t TouchEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:f1x.aasdk.proto.data.TouchEvent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .f1x.aasdk.proto.enums.TouchAction.Enum touch_action = 3;
  if (has_touch_action()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->touch_action());
  }
  // repeated .f1x.aasdk.proto.data.TouchLocation touch_location = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->touch_location_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->touch_location(static_cast<int>(i)));
    }
  }

  // optional uint32 action_index = 2;
  if (has_action_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TouchEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:f1x.aasdk.proto.data.TouchEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const TouchEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TouchEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:f1x.aasdk.proto.data.TouchEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:f1x.aasdk.proto.data.TouchEvent)
    MergeFrom(*source);
  }
}

void TouchEvent::MergeFrom(const TouchEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:f1x.aasdk.proto.data.TouchEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  touch_location_.MergeFrom(from.touch_location_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      action_index_ = from.action_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      touch_action_ = from.touch_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TouchEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:f1x.aasdk.proto.data.TouchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TouchEvent::CopyFrom(const TouchEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:f1x.aasdk.proto.data.TouchEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TouchEvent::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->touch_location())) return false;
  return true;
}

void TouchEvent::Swap(TouchEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TouchEvent::InternalSwap(TouchEvent* other) {
  using std::swap;
  CastToBase(&touch_location_)->InternalSwap(CastToBase(&other->touch_location_));
  swap(action_index_, other->action_index_);
  swap(touch_action_, other->touch_action_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TouchEvent::GetMetadata() const {
  protobuf_TouchEventData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_TouchEventData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::f1x::aasdk::proto::data::TouchEvent* Arena::CreateMaybeMessage< ::f1x::aasdk::proto::data::TouchEvent >(Arena* arena) {
  return Arena::CreateInternal< ::f1x::aasdk::proto::data::TouchEvent >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
