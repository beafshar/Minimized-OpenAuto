// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InputEventIndicationMessage.proto

#include "InputEventIndicationMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_AbsoluteInputEventsData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AbsoluteInputEventsData_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AbsoluteInputEvents;
}  // namespace protobuf_AbsoluteInputEventsData_2eproto
namespace protobuf_ButtonEventsData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ButtonEventsData_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ButtonEvents;
}  // namespace protobuf_ButtonEventsData_2eproto
namespace protobuf_RelativeInputEventsData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RelativeInputEventsData_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RelativeInputEvents;
}  // namespace protobuf_RelativeInputEventsData_2eproto
namespace protobuf_TouchEventData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_TouchEventData_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TouchEvent;
}  // namespace protobuf_TouchEventData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class InputEventIndicationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputEventIndication>
      _instance;
} _InputEventIndication_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace protobuf_InputEventIndicationMessage_2eproto {
static void InitDefaultsInputEventIndication() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::f1x::aasdk::proto::messages::_InputEventIndication_default_instance_;
    new (ptr) ::f1x::aasdk::proto::messages::InputEventIndication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::f1x::aasdk::proto::messages::InputEventIndication::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_InputEventIndication =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsInputEventIndication}, {
      &protobuf_TouchEventData_2eproto::scc_info_TouchEvent.base,
      &protobuf_ButtonEventsData_2eproto::scc_info_ButtonEvents.base,
      &protobuf_AbsoluteInputEventsData_2eproto::scc_info_AbsoluteInputEvents.base,
      &protobuf_RelativeInputEventsData_2eproto::scc_info_RelativeInputEvents.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InputEventIndication.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, disp_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, touch_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, button_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, absolute_input_event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::InputEventIndication, relative_input_event_),
  4,
  5,
  0,
  1,
  2,
  3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::f1x::aasdk::proto::messages::InputEventIndication)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::f1x::aasdk::proto::messages::_InputEventIndication_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "InputEventIndicationMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!InputEventIndicationMessage.proto\022\030f1x"
      ".aasdk.proto.messages\032\024TouchEventData.pr"
      "oto\032\026ButtonEventsData.proto\032\035AbsoluteInp"
      "utEventsData.proto\032\035RelativeInputEventsD"
      "ata.proto\"\302\002\n\024InputEventIndication\022\021\n\tti"
      "mestamp\030\001 \002(\004\022\024\n\014disp_channel\030\002 \001(\005\0225\n\013t"
      "ouch_event\030\003 \001(\0132 .f1x.aasdk.proto.data."
      "TouchEvent\0228\n\014button_event\030\004 \001(\0132\".f1x.a"
      "asdk.proto.data.ButtonEvents\022G\n\024absolute"
      "_input_event\030\005 \001(\0132).f1x.aasdk.proto.dat"
      "a.AbsoluteInputEvents\022G\n\024relative_input_"
      "event\030\006 \001(\0132).f1x.aasdk.proto.data.Relat"
      "iveInputEvents"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 494);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "InputEventIndicationMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_TouchEventData_2eproto::AddDescriptors();
  ::protobuf_ButtonEventsData_2eproto::AddDescriptors();
  ::protobuf_AbsoluteInputEventsData_2eproto::AddDescriptors();
  ::protobuf_RelativeInputEventsData_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_InputEventIndicationMessage_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

void InputEventIndication::InitAsDefaultInstance() {
  ::f1x::aasdk::proto::messages::_InputEventIndication_default_instance_._instance.get_mutable()->touch_event_ = const_cast< ::f1x::aasdk::proto::data::TouchEvent*>(
      ::f1x::aasdk::proto::data::TouchEvent::internal_default_instance());
  ::f1x::aasdk::proto::messages::_InputEventIndication_default_instance_._instance.get_mutable()->button_event_ = const_cast< ::f1x::aasdk::proto::data::ButtonEvents*>(
      ::f1x::aasdk::proto::data::ButtonEvents::internal_default_instance());
  ::f1x::aasdk::proto::messages::_InputEventIndication_default_instance_._instance.get_mutable()->absolute_input_event_ = const_cast< ::f1x::aasdk::proto::data::AbsoluteInputEvents*>(
      ::f1x::aasdk::proto::data::AbsoluteInputEvents::internal_default_instance());
  ::f1x::aasdk::proto::messages::_InputEventIndication_default_instance_._instance.get_mutable()->relative_input_event_ = const_cast< ::f1x::aasdk::proto::data::RelativeInputEvents*>(
      ::f1x::aasdk::proto::data::RelativeInputEvents::internal_default_instance());
}
void InputEventIndication::clear_touch_event() {
  if (touch_event_ != NULL) touch_event_->Clear();
  clear_has_touch_event();
}
void InputEventIndication::clear_button_event() {
  if (button_event_ != NULL) button_event_->Clear();
  clear_has_button_event();
}
void InputEventIndication::clear_absolute_input_event() {
  if (absolute_input_event_ != NULL) absolute_input_event_->Clear();
  clear_has_absolute_input_event();
}
void InputEventIndication::clear_relative_input_event() {
  if (relative_input_event_ != NULL) relative_input_event_->Clear();
  clear_has_relative_input_event();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputEventIndication::kTimestampFieldNumber;
const int InputEventIndication::kDispChannelFieldNumber;
const int InputEventIndication::kTouchEventFieldNumber;
const int InputEventIndication::kButtonEventFieldNumber;
const int InputEventIndication::kAbsoluteInputEventFieldNumber;
const int InputEventIndication::kRelativeInputEventFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputEventIndication::InputEventIndication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_InputEventIndicationMessage_2eproto::scc_info_InputEventIndication.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:f1x.aasdk.proto.messages.InputEventIndication)
}
InputEventIndication::InputEventIndication(const InputEventIndication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_touch_event()) {
    touch_event_ = new ::f1x::aasdk::proto::data::TouchEvent(*from.touch_event_);
  } else {
    touch_event_ = NULL;
  }
  if (from.has_button_event()) {
    button_event_ = new ::f1x::aasdk::proto::data::ButtonEvents(*from.button_event_);
  } else {
    button_event_ = NULL;
  }
  if (from.has_absolute_input_event()) {
    absolute_input_event_ = new ::f1x::aasdk::proto::data::AbsoluteInputEvents(*from.absolute_input_event_);
  } else {
    absolute_input_event_ = NULL;
  }
  if (from.has_relative_input_event()) {
    relative_input_event_ = new ::f1x::aasdk::proto::data::RelativeInputEvents(*from.relative_input_event_);
  } else {
    relative_input_event_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&disp_channel_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(disp_channel_));
  // @@protoc_insertion_point(copy_constructor:f1x.aasdk.proto.messages.InputEventIndication)
}

void InputEventIndication::SharedCtor() {
  ::memset(&touch_event_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&disp_channel_) -
      reinterpret_cast<char*>(&touch_event_)) + sizeof(disp_channel_));
}

InputEventIndication::~InputEventIndication() {
  // @@protoc_insertion_point(destructor:f1x.aasdk.proto.messages.InputEventIndication)
  SharedDtor();
}

void InputEventIndication::SharedDtor() {
  if (this != internal_default_instance()) delete touch_event_;
  if (this != internal_default_instance()) delete button_event_;
  if (this != internal_default_instance()) delete absolute_input_event_;
  if (this != internal_default_instance()) delete relative_input_event_;
}

void InputEventIndication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputEventIndication::descriptor() {
  ::protobuf_InputEventIndicationMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_InputEventIndicationMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputEventIndication& InputEventIndication::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_InputEventIndicationMessage_2eproto::scc_info_InputEventIndication.base);
  return *internal_default_instance();
}


void InputEventIndication::Clear() {
// @@protoc_insertion_point(message_clear_start:f1x.aasdk.proto.messages.InputEventIndication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(touch_event_ != NULL);
      touch_event_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(button_event_ != NULL);
      button_event_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(absolute_input_event_ != NULL);
      absolute_input_event_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(relative_input_event_ != NULL);
      relative_input_event_->Clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&disp_channel_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(disp_channel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InputEventIndication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:f1x.aasdk.proto.messages.InputEventIndication)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 disp_channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_disp_channel();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &disp_channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .f1x.aasdk.proto.data.TouchEvent touch_event = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_touch_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .f1x.aasdk.proto.data.ButtonEvents button_event = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_button_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .f1x.aasdk.proto.data.AbsoluteInputEvents absolute_input_event = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_absolute_input_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .f1x.aasdk.proto.data.RelativeInputEvents relative_input_event = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_relative_input_event()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:f1x.aasdk.proto.messages.InputEventIndication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:f1x.aasdk.proto.messages.InputEventIndication)
  return false;
#undef DO_
}

void InputEventIndication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:f1x.aasdk.proto.messages.InputEventIndication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 timestamp = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp(), output);
  }

  // optional int32 disp_channel = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->disp_channel(), output);
  }

  // optional .f1x.aasdk.proto.data.TouchEvent touch_event = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_touch_event(), output);
  }

  // optional .f1x.aasdk.proto.data.ButtonEvents button_event = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_button_event(), output);
  }

  // optional .f1x.aasdk.proto.data.AbsoluteInputEvents absolute_input_event = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_absolute_input_event(), output);
  }

  // optional .f1x.aasdk.proto.data.RelativeInputEvents relative_input_event = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_relative_input_event(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:f1x.aasdk.proto.messages.InputEventIndication)
}

::google::protobuf::uint8* InputEventIndication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:f1x.aasdk.proto.messages.InputEventIndication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 timestamp = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp(), target);
  }

  // optional int32 disp_channel = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->disp_channel(), target);
  }

  // optional .f1x.aasdk.proto.data.TouchEvent touch_event = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_touch_event(), deterministic, target);
  }

  // optional .f1x.aasdk.proto.data.ButtonEvents button_event = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_button_event(), deterministic, target);
  }

  // optional .f1x.aasdk.proto.data.AbsoluteInputEvents absolute_input_event = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_absolute_input_event(), deterministic, target);
  }

  // optional .f1x.aasdk.proto.data.RelativeInputEvents relative_input_event = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_relative_input_event(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:f1x.aasdk.proto.messages.InputEventIndication)
  return target;
}

size_t InputEventIndication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:f1x.aasdk.proto.messages.InputEventIndication)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint64 timestamp = 1;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .f1x.aasdk.proto.data.TouchEvent touch_event = 3;
    if (has_touch_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *touch_event_);
    }

    // optional .f1x.aasdk.proto.data.ButtonEvents button_event = 4;
    if (has_button_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *button_event_);
    }

    // optional .f1x.aasdk.proto.data.AbsoluteInputEvents absolute_input_event = 5;
    if (has_absolute_input_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *absolute_input_event_);
    }

    // optional .f1x.aasdk.proto.data.RelativeInputEvents relative_input_event = 6;
    if (has_relative_input_event()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *relative_input_event_);
    }

  }
  // optional int32 disp_channel = 2;
  if (has_disp_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->disp_channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputEventIndication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:f1x.aasdk.proto.messages.InputEventIndication)
  GOOGLE_DCHECK_NE(&from, this);
  const InputEventIndication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputEventIndication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:f1x.aasdk.proto.messages.InputEventIndication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:f1x.aasdk.proto.messages.InputEventIndication)
    MergeFrom(*source);
  }
}

void InputEventIndication::MergeFrom(const InputEventIndication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:f1x.aasdk.proto.messages.InputEventIndication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_touch_event()->::f1x::aasdk::proto::data::TouchEvent::MergeFrom(from.touch_event());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_button_event()->::f1x::aasdk::proto::data::ButtonEvents::MergeFrom(from.button_event());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_absolute_input_event()->::f1x::aasdk::proto::data::AbsoluteInputEvents::MergeFrom(from.absolute_input_event());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_relative_input_event()->::f1x::aasdk::proto::data::RelativeInputEvents::MergeFrom(from.relative_input_event());
    }
    if (cached_has_bits & 0x00000010u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      disp_channel_ = from.disp_channel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InputEventIndication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:f1x.aasdk.proto.messages.InputEventIndication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputEventIndication::CopyFrom(const InputEventIndication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:f1x.aasdk.proto.messages.InputEventIndication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputEventIndication::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  if (has_touch_event()) {
    if (!this->touch_event_->IsInitialized()) return false;
  }
  if (has_button_event()) {
    if (!this->button_event_->IsInitialized()) return false;
  }
  if (has_absolute_input_event()) {
    if (!this->absolute_input_event_->IsInitialized()) return false;
  }
  if (has_relative_input_event()) {
    if (!this->relative_input_event_->IsInitialized()) return false;
  }
  return true;
}

void InputEventIndication::Swap(InputEventIndication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputEventIndication::InternalSwap(InputEventIndication* other) {
  using std::swap;
  swap(touch_event_, other->touch_event_);
  swap(button_event_, other->button_event_);
  swap(absolute_input_event_, other->absolute_input_event_);
  swap(relative_input_event_, other->relative_input_event_);
  swap(timestamp_, other->timestamp_);
  swap(disp_channel_, other->disp_channel_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputEventIndication::GetMetadata() const {
  protobuf_InputEventIndicationMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_InputEventIndicationMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::f1x::aasdk::proto::messages::InputEventIndication* Arena::CreateMaybeMessage< ::f1x::aasdk::proto::messages::InputEventIndication >(Arena* arena) {
  return Arena::CreateInternal< ::f1x::aasdk::proto::messages::InputEventIndication >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
