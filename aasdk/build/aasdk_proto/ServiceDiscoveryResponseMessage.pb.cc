// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServiceDiscoveryResponseMessage.proto

#include "ServiceDiscoveryResponseMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ChannelDescriptorData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ChannelDescriptorData_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_ChannelDescriptor;
}  // namespace protobuf_ChannelDescriptorData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class ServiceDiscoveryResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServiceDiscoveryResponse>
      _instance;
} _ServiceDiscoveryResponse_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace protobuf_ServiceDiscoveryResponseMessage_2eproto {
static void InitDefaultsServiceDiscoveryResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::f1x::aasdk::proto::messages::_ServiceDiscoveryResponse_default_instance_;
    new (ptr) ::f1x::aasdk::proto::messages::ServiceDiscoveryResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::f1x::aasdk::proto::messages::ServiceDiscoveryResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ServiceDiscoveryResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServiceDiscoveryResponse}, {
      &protobuf_ChannelDescriptorData_2eproto::scc_info_ChannelDescriptor.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServiceDiscoveryResponse.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, head_unit_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, car_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, car_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, car_serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, left_hand_drive_vehicle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, headunit_manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, headunit_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, sw_build_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, sw_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, can_play_native_media_during_vr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse, hide_clock_),
  ~0u,
  0,
  1,
  2,
  3,
  8,
  4,
  5,
  6,
  7,
  9,
  10,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::f1x::aasdk::proto::messages::ServiceDiscoveryResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::f1x::aasdk::proto::messages::_ServiceDiscoveryResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ServiceDiscoveryResponseMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%ServiceDiscoveryResponseMessage.proto\022"
      "\030f1x.aasdk.proto.messages\032\033ChannelDescri"
      "ptorData.proto\"\341\002\n\030ServiceDiscoveryRespo"
      "nse\0229\n\010channels\030\001 \003(\0132\'.f1x.aasdk.proto."
      "data.ChannelDescriptor\022\026\n\016head_unit_name"
      "\030\002 \002(\t\022\021\n\tcar_model\030\003 \002(\t\022\020\n\010car_year\030\004 "
      "\002(\t\022\022\n\ncar_serial\030\005 \002(\t\022\037\n\027left_hand_dri"
      "ve_vehicle\030\006 \002(\010\022\035\n\025headunit_manufacture"
      "r\030\007 \002(\t\022\026\n\016headunit_model\030\010 \002(\t\022\020\n\010sw_bu"
      "ild\030\t \002(\t\022\022\n\nsw_version\030\n \002(\t\022\'\n\037can_pla"
      "y_native_media_during_vr\030\013 \002(\010\022\022\n\nhide_c"
      "lock\030\014 \001(\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 450);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServiceDiscoveryResponseMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_ChannelDescriptorData_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServiceDiscoveryResponseMessage_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

void ServiceDiscoveryResponse::InitAsDefaultInstance() {
}
void ServiceDiscoveryResponse::clear_channels() {
  channels_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServiceDiscoveryResponse::kChannelsFieldNumber;
const int ServiceDiscoveryResponse::kHeadUnitNameFieldNumber;
const int ServiceDiscoveryResponse::kCarModelFieldNumber;
const int ServiceDiscoveryResponse::kCarYearFieldNumber;
const int ServiceDiscoveryResponse::kCarSerialFieldNumber;
const int ServiceDiscoveryResponse::kLeftHandDriveVehicleFieldNumber;
const int ServiceDiscoveryResponse::kHeadunitManufacturerFieldNumber;
const int ServiceDiscoveryResponse::kHeadunitModelFieldNumber;
const int ServiceDiscoveryResponse::kSwBuildFieldNumber;
const int ServiceDiscoveryResponse::kSwVersionFieldNumber;
const int ServiceDiscoveryResponse::kCanPlayNativeMediaDuringVrFieldNumber;
const int ServiceDiscoveryResponse::kHideClockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServiceDiscoveryResponse::ServiceDiscoveryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ServiceDiscoveryResponseMessage_2eproto::scc_info_ServiceDiscoveryResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
}
ServiceDiscoveryResponse::ServiceDiscoveryResponse(const ServiceDiscoveryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      channels_(from.channels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  head_unit_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_head_unit_name()) {
    head_unit_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_unit_name_);
  }
  car_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_car_model()) {
    car_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_model_);
  }
  car_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_car_year()) {
    car_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_year_);
  }
  car_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_car_serial()) {
    car_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_serial_);
  }
  headunit_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headunit_manufacturer()) {
    headunit_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headunit_manufacturer_);
  }
  headunit_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headunit_model()) {
    headunit_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headunit_model_);
  }
  sw_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sw_build()) {
    sw_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_build_);
  }
  sw_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sw_version()) {
    sw_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_version_);
  }
  ::memcpy(&left_hand_drive_vehicle_, &from.left_hand_drive_vehicle_,
    static_cast<size_t>(reinterpret_cast<char*>(&hide_clock_) -
    reinterpret_cast<char*>(&left_hand_drive_vehicle_)) + sizeof(hide_clock_));
  // @@protoc_insertion_point(copy_constructor:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
}

void ServiceDiscoveryResponse::SharedCtor() {
  head_unit_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_serial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headunit_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headunit_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&left_hand_drive_vehicle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hide_clock_) -
      reinterpret_cast<char*>(&left_hand_drive_vehicle_)) + sizeof(hide_clock_));
}

ServiceDiscoveryResponse::~ServiceDiscoveryResponse() {
  // @@protoc_insertion_point(destructor:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  SharedDtor();
}

void ServiceDiscoveryResponse::SharedDtor() {
  head_unit_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  car_serial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headunit_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headunit_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sw_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServiceDiscoveryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServiceDiscoveryResponse::descriptor() {
  ::protobuf_ServiceDiscoveryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServiceDiscoveryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServiceDiscoveryResponse& ServiceDiscoveryResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ServiceDiscoveryResponseMessage_2eproto::scc_info_ServiceDiscoveryResponse.base);
  return *internal_default_instance();
}


void ServiceDiscoveryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channels_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      head_unit_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      car_model_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      car_year_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      car_serial_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      headunit_manufacturer_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      headunit_model_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      sw_build_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      sw_version_.ClearNonDefaultToEmptyNoArena();
    }
  }
  ::memset(&left_hand_drive_vehicle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hide_clock_) -
      reinterpret_cast<char*>(&left_hand_drive_vehicle_)) + sizeof(hide_clock_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ServiceDiscoveryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .f1x.aasdk.proto.data.ChannelDescriptor channels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string head_unit_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_head_unit_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->head_unit_name().data(), static_cast<int>(this->head_unit_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string car_model = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_model().data(), static_cast<int>(this->car_model().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string car_year = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_year()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_year().data(), static_cast<int>(this->car_year().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string car_serial = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_car_serial()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->car_serial().data(), static_cast<int>(this->car_serial().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool left_hand_drive_vehicle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_left_hand_drive_vehicle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_hand_drive_vehicle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string headunit_manufacturer = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headunit_manufacturer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headunit_manufacturer().data(), static_cast<int>(this->headunit_manufacturer().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string headunit_model = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headunit_model()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headunit_model().data(), static_cast<int>(this->headunit_model().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string sw_build = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sw_build()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sw_build().data(), static_cast<int>(this->sw_build().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string sw_version = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sw_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sw_version().data(), static_cast<int>(this->sw_version().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool can_play_native_media_during_vr = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_can_play_native_media_during_vr();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_play_native_media_during_vr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hide_clock = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_hide_clock();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hide_clock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  return false;
#undef DO_
}

void ServiceDiscoveryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .f1x.aasdk.proto.data.ChannelDescriptor channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channels(static_cast<int>(i)),
      output);
  }

  cached_has_bits = _has_bits_[0];
  // required string head_unit_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->head_unit_name().data(), static_cast<int>(this->head_unit_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->head_unit_name(), output);
  }

  // required string car_model = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_model().data(), static_cast<int>(this->car_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->car_model(), output);
  }

  // required string car_year = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_year().data(), static_cast<int>(this->car_year().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->car_year(), output);
  }

  // required string car_serial = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_serial().data(), static_cast<int>(this->car_serial().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->car_serial(), output);
  }

  // required bool left_hand_drive_vehicle = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->left_hand_drive_vehicle(), output);
  }

  // required string headunit_manufacturer = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headunit_manufacturer().data(), static_cast<int>(this->headunit_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->headunit_manufacturer(), output);
  }

  // required string headunit_model = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headunit_model().data(), static_cast<int>(this->headunit_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->headunit_model(), output);
  }

  // required string sw_build = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sw_build().data(), static_cast<int>(this->sw_build().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sw_build(), output);
  }

  // required string sw_version = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sw_version().data(), static_cast<int>(this->sw_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->sw_version(), output);
  }

  // required bool can_play_native_media_during_vr = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->can_play_native_media_during_vr(), output);
  }

  // optional bool hide_clock = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->hide_clock(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
}

::google::protobuf::uint8* ServiceDiscoveryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .f1x.aasdk.proto.data.ChannelDescriptor channels = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channels(static_cast<int>(i)), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required string head_unit_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->head_unit_name().data(), static_cast<int>(this->head_unit_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.head_unit_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->head_unit_name(), target);
  }

  // required string car_model = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_model().data(), static_cast<int>(this->car_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->car_model(), target);
  }

  // required string car_year = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_year().data(), static_cast<int>(this->car_year().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->car_year(), target);
  }

  // required string car_serial = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->car_serial().data(), static_cast<int>(this->car_serial().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.car_serial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->car_serial(), target);
  }

  // required bool left_hand_drive_vehicle = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->left_hand_drive_vehicle(), target);
  }

  // required string headunit_manufacturer = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headunit_manufacturer().data(), static_cast<int>(this->headunit_manufacturer().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->headunit_manufacturer(), target);
  }

  // required string headunit_model = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headunit_model().data(), static_cast<int>(this->headunit_model().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.headunit_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->headunit_model(), target);
  }

  // required string sw_build = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sw_build().data(), static_cast<int>(this->sw_build().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_build");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sw_build(), target);
  }

  // required string sw_version = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sw_version().data(), static_cast<int>(this->sw_version().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "f1x.aasdk.proto.messages.ServiceDiscoveryResponse.sw_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sw_version(), target);
  }

  // required bool can_play_native_media_during_vr = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->can_play_native_media_during_vr(), target);
  }

  // optional bool hide_clock = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->hide_clock(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  return target;
}

size_t ServiceDiscoveryResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  size_t total_size = 0;

  if (has_head_unit_name()) {
    // required string head_unit_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head_unit_name());
  }

  if (has_car_model()) {
    // required string car_model = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->car_model());
  }

  if (has_car_year()) {
    // required string car_year = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->car_year());
  }

  if (has_car_serial()) {
    // required string car_serial = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->car_serial());
  }

  if (has_headunit_manufacturer()) {
    // required string headunit_manufacturer = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headunit_manufacturer());
  }

  if (has_headunit_model()) {
    // required string headunit_model = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headunit_model());
  }

  if (has_sw_build()) {
    // required string sw_build = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sw_build());
  }

  if (has_sw_version()) {
    // required string sw_version = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sw_version());
  }

  if (has_left_hand_drive_vehicle()) {
    // required bool left_hand_drive_vehicle = 6;
    total_size += 1 + 1;
  }

  if (has_can_play_native_media_during_vr()) {
    // required bool can_play_native_media_during_vr = 11;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ServiceDiscoveryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required string head_unit_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->head_unit_name());

    // required string car_model = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->car_model());

    // required string car_year = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->car_year());

    // required string car_serial = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->car_serial());

    // required string headunit_manufacturer = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headunit_manufacturer());

    // required string headunit_model = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headunit_model());

    // required string sw_build = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sw_build());

    // required string sw_version = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sw_version());

    // required bool left_hand_drive_vehicle = 6;
    total_size += 1 + 1;

    // required bool can_play_native_media_during_vr = 11;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .f1x.aasdk.proto.data.ChannelDescriptor channels = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channels(static_cast<int>(i)));
    }
  }

  // optional bool hide_clock = 12;
  if (has_hide_clock()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceDiscoveryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceDiscoveryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServiceDiscoveryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
    MergeFrom(*source);
  }
}

void ServiceDiscoveryResponse::MergeFrom(const ServiceDiscoveryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channels_.MergeFrom(from.channels_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_head_unit_name();
      head_unit_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.head_unit_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_car_model();
      car_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_model_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_car_year();
      car_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_year_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_car_serial();
      car_serial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.car_serial_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_headunit_manufacturer();
      headunit_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headunit_manufacturer_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_headunit_model();
      headunit_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headunit_model_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_sw_build();
      sw_build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_build_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_sw_version();
      sw_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_version_);
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      left_hand_drive_vehicle_ = from.left_hand_drive_vehicle_;
    }
    if (cached_has_bits & 0x00000200u) {
      can_play_native_media_during_vr_ = from.can_play_native_media_during_vr_;
    }
    if (cached_has_bits & 0x00000400u) {
      hide_clock_ = from.hide_clock_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ServiceDiscoveryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceDiscoveryResponse::CopyFrom(const ServiceDiscoveryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:f1x.aasdk.proto.messages.ServiceDiscoveryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceDiscoveryResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->channels())) return false;
  return true;
}

void ServiceDiscoveryResponse::Swap(ServiceDiscoveryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServiceDiscoveryResponse::InternalSwap(ServiceDiscoveryResponse* other) {
  using std::swap;
  CastToBase(&channels_)->InternalSwap(CastToBase(&other->channels_));
  head_unit_name_.Swap(&other->head_unit_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  car_model_.Swap(&other->car_model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  car_year_.Swap(&other->car_year_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  car_serial_.Swap(&other->car_serial_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headunit_manufacturer_.Swap(&other->headunit_manufacturer_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  headunit_model_.Swap(&other->headunit_model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sw_build_.Swap(&other->sw_build_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sw_version_.Swap(&other->sw_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(left_hand_drive_vehicle_, other->left_hand_drive_vehicle_);
  swap(can_play_native_media_during_vr_, other->can_play_native_media_during_vr_);
  swap(hide_clock_, other->hide_clock_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServiceDiscoveryResponse::GetMetadata() const {
  protobuf_ServiceDiscoveryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServiceDiscoveryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::f1x::aasdk::proto::messages::ServiceDiscoveryResponse* Arena::CreateMaybeMessage< ::f1x::aasdk::proto::messages::ServiceDiscoveryResponse >(Arena* arena) {
  return Arena::CreateInternal< ::f1x::aasdk::proto::messages::ServiceDiscoveryResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
