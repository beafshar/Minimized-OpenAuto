// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GPSLocationData.proto

#ifndef PROTOBUF_INCLUDED_GPSLocationData_2eproto
#define PROTOBUF_INCLUDED_GPSLocationData_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_GPSLocationData_2eproto 

namespace protobuf_GPSLocationData_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_GPSLocationData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {
class GPSLocation;
class GPSLocationDefaultTypeInternal;
extern GPSLocationDefaultTypeInternal _GPSLocation_default_instance_;
}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::data::GPSLocation* Arena::CreateMaybeMessage<::f1x::aasdk::proto::data::GPSLocation>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace data {

// ===================================================================

class GPSLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.data.GPSLocation) */ {
 public:
  GPSLocation();
  virtual ~GPSLocation();

  GPSLocation(const GPSLocation& from);

  inline GPSLocation& operator=(const GPSLocation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GPSLocation(GPSLocation&& from) noexcept
    : GPSLocation() {
    *this = ::std::move(from);
  }

  inline GPSLocation& operator=(GPSLocation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GPSLocation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GPSLocation* internal_default_instance() {
    return reinterpret_cast<const GPSLocation*>(
               &_GPSLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GPSLocation* other);
  friend void swap(GPSLocation& a, GPSLocation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GPSLocation* New() const final {
    return CreateMaybeMessage<GPSLocation>(NULL);
  }

  GPSLocation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GPSLocation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GPSLocation& from);
  void MergeFrom(const GPSLocation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GPSLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // required int32 latitude = 2;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  ::google::protobuf::int32 latitude() const;
  void set_latitude(::google::protobuf::int32 value);

  // required int32 longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  ::google::protobuf::int32 longitude() const;
  void set_longitude(::google::protobuf::int32 value);

  // required uint32 accuracy = 4;
  bool has_accuracy() const;
  void clear_accuracy();
  static const int kAccuracyFieldNumber = 4;
  ::google::protobuf::uint32 accuracy() const;
  void set_accuracy(::google::protobuf::uint32 value);

  // optional int32 altitude = 5;
  bool has_altitude() const;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 5;
  ::google::protobuf::int32 altitude() const;
  void set_altitude(::google::protobuf::int32 value);

  // optional int32 speed = 6;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 6;
  ::google::protobuf::int32 speed() const;
  void set_speed(::google::protobuf::int32 value);

  // optional int32 bearing = 7;
  bool has_bearing() const;
  void clear_bearing();
  static const int kBearingFieldNumber = 7;
  ::google::protobuf::int32 bearing() const;
  void set_bearing(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.data.GPSLocation)
 private:
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_accuracy();
  void clear_has_accuracy();
  void set_has_altitude();
  void clear_has_altitude();
  void set_has_speed();
  void clear_has_speed();
  void set_has_bearing();
  void clear_has_bearing();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::int32 latitude_;
  ::google::protobuf::int32 longitude_;
  ::google::protobuf::uint32 accuracy_;
  ::google::protobuf::int32 altitude_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 bearing_;
  friend struct ::protobuf_GPSLocationData_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GPSLocation

// required uint64 timestamp = 1;
inline bool GPSLocation::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GPSLocation::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GPSLocation::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GPSLocation::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 GPSLocation::timestamp() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.GPSLocation.timestamp)
  return timestamp_;
}
inline void GPSLocation::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.GPSLocation.timestamp)
}

// required int32 latitude = 2;
inline bool GPSLocation::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GPSLocation::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GPSLocation::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GPSLocation::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline ::google::protobuf::int32 GPSLocation::latitude() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.GPSLocation.latitude)
  return latitude_;
}
inline void GPSLocation::set_latitude(::google::protobuf::int32 value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.GPSLocation.latitude)
}

// required int32 longitude = 3;
inline bool GPSLocation::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GPSLocation::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GPSLocation::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GPSLocation::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline ::google::protobuf::int32 GPSLocation::longitude() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.GPSLocation.longitude)
  return longitude_;
}
inline void GPSLocation::set_longitude(::google::protobuf::int32 value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.GPSLocation.longitude)
}

// required uint32 accuracy = 4;
inline bool GPSLocation::has_accuracy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GPSLocation::set_has_accuracy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GPSLocation::clear_has_accuracy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GPSLocation::clear_accuracy() {
  accuracy_ = 0u;
  clear_has_accuracy();
}
inline ::google::protobuf::uint32 GPSLocation::accuracy() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.GPSLocation.accuracy)
  return accuracy_;
}
inline void GPSLocation::set_accuracy(::google::protobuf::uint32 value) {
  set_has_accuracy();
  accuracy_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.GPSLocation.accuracy)
}

// optional int32 altitude = 5;
inline bool GPSLocation::has_altitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GPSLocation::set_has_altitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GPSLocation::clear_has_altitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GPSLocation::clear_altitude() {
  altitude_ = 0;
  clear_has_altitude();
}
inline ::google::protobuf::int32 GPSLocation::altitude() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.GPSLocation.altitude)
  return altitude_;
}
inline void GPSLocation::set_altitude(::google::protobuf::int32 value) {
  set_has_altitude();
  altitude_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.GPSLocation.altitude)
}

// optional int32 speed = 6;
inline bool GPSLocation::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GPSLocation::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GPSLocation::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GPSLocation::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 GPSLocation::speed() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.GPSLocation.speed)
  return speed_;
}
inline void GPSLocation::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.GPSLocation.speed)
}

// optional int32 bearing = 7;
inline bool GPSLocation::has_bearing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GPSLocation::set_has_bearing() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GPSLocation::clear_has_bearing() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GPSLocation::clear_bearing() {
  bearing_ = 0;
  clear_has_bearing();
}
inline ::google::protobuf::int32 GPSLocation::bearing() const {
  // @@protoc_insertion_point(field_get:f1x.aasdk.proto.data.GPSLocation.bearing)
  return bearing_;
}
inline void GPSLocation::set_bearing(::google::protobuf::int32 value) {
  set_has_bearing();
  bearing_ = value;
  // @@protoc_insertion_point(field_set:f1x.aasdk.proto.data.GPSLocation.bearing)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_GPSLocationData_2eproto
