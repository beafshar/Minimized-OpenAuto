// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SensorEventIndicationMessage.proto

#include "SensorEventIndicationMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_AccelData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_AccelData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Accel;
}  // namespace protobuf_AccelData_2eproto
namespace protobuf_CompassData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_CompassData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Compass;
}  // namespace protobuf_CompassData_2eproto
namespace protobuf_DiagnosticsData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DiagnosticsData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Diagnostics;
}  // namespace protobuf_DiagnosticsData_2eproto
namespace protobuf_DoorData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DoorData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Door;
}  // namespace protobuf_DoorData_2eproto
namespace protobuf_DrivingStatusData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DrivingStatusData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DrivingStatus;
}  // namespace protobuf_DrivingStatusData_2eproto
namespace protobuf_EnvironmentData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_EnvironmentData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Environment;
}  // namespace protobuf_EnvironmentData_2eproto
namespace protobuf_FuelLevelData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FuelLevelData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FuelLevel;
}  // namespace protobuf_FuelLevelData_2eproto
namespace protobuf_GPSLocationData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GPSLocationData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GPSLocation;
}  // namespace protobuf_GPSLocationData_2eproto
namespace protobuf_GearData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GearData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gear;
}  // namespace protobuf_GearData_2eproto
namespace protobuf_GyroData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GyroData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Gyro;
}  // namespace protobuf_GyroData_2eproto
namespace protobuf_HVACData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HVACData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HVAC;
}  // namespace protobuf_HVACData_2eproto
namespace protobuf_LightData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_LightData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Light;
}  // namespace protobuf_LightData_2eproto
namespace protobuf_NightModeData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_NightModeData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NightMode;
}  // namespace protobuf_NightModeData_2eproto
namespace protobuf_OdometerData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_OdometerData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Odometer;
}  // namespace protobuf_OdometerData_2eproto
namespace protobuf_ParkingBrakeData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ParkingBrakeData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParkingBrake;
}  // namespace protobuf_ParkingBrakeData_2eproto
namespace protobuf_PassengerData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PassengerData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Passenger;
}  // namespace protobuf_PassengerData_2eproto
namespace protobuf_RPMData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_RPMData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RPM;
}  // namespace protobuf_RPMData_2eproto
namespace protobuf_SpeedData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_SpeedData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Speed;
}  // namespace protobuf_SpeedData_2eproto
namespace protobuf_SteeringWheelData_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_SteeringWheelData_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SteeringWheel;
}  // namespace protobuf_SteeringWheelData_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {
class SensorEventIndicationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SensorEventIndication>
      _instance;
} _SensorEventIndication_default_instance_;
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace protobuf_SensorEventIndicationMessage_2eproto {
static void InitDefaultsSensorEventIndication() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::f1x::aasdk::proto::messages::_SensorEventIndication_default_instance_;
    new (ptr) ::f1x::aasdk::proto::messages::SensorEventIndication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::f1x::aasdk::proto::messages::SensorEventIndication::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<19> scc_info_SensorEventIndication =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 19, InitDefaultsSensorEventIndication}, {
      &protobuf_GPSLocationData_2eproto::scc_info_GPSLocation.base,
      &protobuf_CompassData_2eproto::scc_info_Compass.base,
      &protobuf_SpeedData_2eproto::scc_info_Speed.base,
      &protobuf_RPMData_2eproto::scc_info_RPM.base,
      &protobuf_OdometerData_2eproto::scc_info_Odometer.base,
      &protobuf_FuelLevelData_2eproto::scc_info_FuelLevel.base,
      &protobuf_ParkingBrakeData_2eproto::scc_info_ParkingBrake.base,
      &protobuf_GearData_2eproto::scc_info_Gear.base,
      &protobuf_DiagnosticsData_2eproto::scc_info_Diagnostics.base,
      &protobuf_NightModeData_2eproto::scc_info_NightMode.base,
      &protobuf_EnvironmentData_2eproto::scc_info_Environment.base,
      &protobuf_HVACData_2eproto::scc_info_HVAC.base,
      &protobuf_DrivingStatusData_2eproto::scc_info_DrivingStatus.base,
      &protobuf_SteeringWheelData_2eproto::scc_info_SteeringWheel.base,
      &protobuf_PassengerData_2eproto::scc_info_Passenger.base,
      &protobuf_DoorData_2eproto::scc_info_Door.base,
      &protobuf_LightData_2eproto::scc_info_Light.base,
      &protobuf_AccelData_2eproto::scc_info_Accel.base,
      &protobuf_GyroData_2eproto::scc_info_Gyro.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SensorEventIndication.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, gps_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, compass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, rpm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, odometer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, fuel_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, parking_brake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, gear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, diagnostics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, night_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, enviorment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, hvac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, driving_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, steering_wheel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, passenger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, door_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, light_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, accel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::f1x::aasdk::proto::messages::SensorEventIndication, gyro_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 24, sizeof(::f1x::aasdk::proto::messages::SensorEventIndication)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::f1x::aasdk::proto::messages::_SensorEventIndication_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "SensorEventIndicationMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"SensorEventIndicationMessage.proto\022\030f1"
      "x.aasdk.proto.messages\032\025GPSLocationData."
      "proto\032\021CompassData.proto\032\017SpeedData.prot"
      "o\032\rRPMData.proto\032\022OdometerData.proto\032\023Fu"
      "elLevelData.proto\032\026ParkingBrakeData.prot"
      "o\032\016GearData.proto\032\025DiagnosticsData.proto"
      "\032\023NightModeData.proto\032\025EnvironmentData.p"
      "roto\032\016HVACData.proto\032\027DrivingStatusData."
      "proto\032\027SteeringWheelData.proto\032\023Passenge"
      "rData.proto\032\016DoorData.proto\032\017LightData.p"
      "roto\032\017AccelData.proto\032\016GyroData.proto\"\310\007"
      "\n\025SensorEventIndication\0227\n\014gps_location\030"
      "\001 \003(\0132!.f1x.aasdk.proto.data.GPSLocation"
      "\022.\n\007compass\030\002 \003(\0132\035.f1x.aasdk.proto.data"
      ".Compass\022*\n\005speed\030\003 \003(\0132\033.f1x.aasdk.prot"
      "o.data.Speed\022&\n\003rpm\030\004 \003(\0132\031.f1x.aasdk.pr"
      "oto.data.RPM\0220\n\010odometer\030\005 \003(\0132\036.f1x.aas"
      "dk.proto.data.Odometer\0223\n\nfuel_level\030\006 \003"
      "(\0132\037.f1x.aasdk.proto.data.FuelLevel\0229\n\rp"
      "arking_brake\030\007 \003(\0132\".f1x.aasdk.proto.dat"
      "a.ParkingBrake\022(\n\004gear\030\010 \003(\0132\032.f1x.aasdk"
      ".proto.data.Gear\0226\n\013diagnostics\030\t \003(\0132!."
      "f1x.aasdk.proto.data.Diagnostics\0223\n\nnigh"
      "t_mode\030\n \003(\0132\037.f1x.aasdk.proto.data.Nigh"
      "tMode\0225\n\nenviorment\030\013 \003(\0132!.f1x.aasdk.pr"
      "oto.data.Environment\022(\n\004hvac\030\014 \003(\0132\032.f1x"
      ".aasdk.proto.data.HVAC\022;\n\016driving_status"
      "\030\r \003(\0132#.f1x.aasdk.proto.data.DrivingSta"
      "tus\022;\n\016steering_wheel\030\016 \003(\0132#.f1x.aasdk."
      "proto.data.SteeringWheel\0222\n\tpassenger\030\017 "
      "\003(\0132\037.f1x.aasdk.proto.data.Passenger\022(\n\004"
      "door\030\020 \003(\0132\032.f1x.aasdk.proto.data.Door\022*"
      "\n\005light\030\021 \003(\0132\033.f1x.aasdk.proto.data.Lig"
      "ht\022*\n\005accel\030\023 \003(\0132\033.f1x.aasdk.proto.data"
      ".Accel\022(\n\004gyro\030\024 \003(\0132\032.f1x.aasdk.proto.d"
      "ata.Gyro"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1408);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SensorEventIndicationMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_GPSLocationData_2eproto::AddDescriptors();
  ::protobuf_CompassData_2eproto::AddDescriptors();
  ::protobuf_SpeedData_2eproto::AddDescriptors();
  ::protobuf_RPMData_2eproto::AddDescriptors();
  ::protobuf_OdometerData_2eproto::AddDescriptors();
  ::protobuf_FuelLevelData_2eproto::AddDescriptors();
  ::protobuf_ParkingBrakeData_2eproto::AddDescriptors();
  ::protobuf_GearData_2eproto::AddDescriptors();
  ::protobuf_DiagnosticsData_2eproto::AddDescriptors();
  ::protobuf_NightModeData_2eproto::AddDescriptors();
  ::protobuf_EnvironmentData_2eproto::AddDescriptors();
  ::protobuf_HVACData_2eproto::AddDescriptors();
  ::protobuf_DrivingStatusData_2eproto::AddDescriptors();
  ::protobuf_SteeringWheelData_2eproto::AddDescriptors();
  ::protobuf_PassengerData_2eproto::AddDescriptors();
  ::protobuf_DoorData_2eproto::AddDescriptors();
  ::protobuf_LightData_2eproto::AddDescriptors();
  ::protobuf_AccelData_2eproto::AddDescriptors();
  ::protobuf_GyroData_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_SensorEventIndicationMessage_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace messages {

// ===================================================================

void SensorEventIndication::InitAsDefaultInstance() {
}
void SensorEventIndication::clear_gps_location() {
  gps_location_.Clear();
}
void SensorEventIndication::clear_compass() {
  compass_.Clear();
}
void SensorEventIndication::clear_speed() {
  speed_.Clear();
}
void SensorEventIndication::clear_rpm() {
  rpm_.Clear();
}
void SensorEventIndication::clear_odometer() {
  odometer_.Clear();
}
void SensorEventIndication::clear_fuel_level() {
  fuel_level_.Clear();
}
void SensorEventIndication::clear_parking_brake() {
  parking_brake_.Clear();
}
void SensorEventIndication::clear_gear() {
  gear_.Clear();
}
void SensorEventIndication::clear_diagnostics() {
  diagnostics_.Clear();
}
void SensorEventIndication::clear_night_mode() {
  night_mode_.Clear();
}
void SensorEventIndication::clear_enviorment() {
  enviorment_.Clear();
}
void SensorEventIndication::clear_hvac() {
  hvac_.Clear();
}
void SensorEventIndication::clear_driving_status() {
  driving_status_.Clear();
}
void SensorEventIndication::clear_steering_wheel() {
  steering_wheel_.Clear();
}
void SensorEventIndication::clear_passenger() {
  passenger_.Clear();
}
void SensorEventIndication::clear_door() {
  door_.Clear();
}
void SensorEventIndication::clear_light() {
  light_.Clear();
}
void SensorEventIndication::clear_accel() {
  accel_.Clear();
}
void SensorEventIndication::clear_gyro() {
  gyro_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorEventIndication::kGpsLocationFieldNumber;
const int SensorEventIndication::kCompassFieldNumber;
const int SensorEventIndication::kSpeedFieldNumber;
const int SensorEventIndication::kRpmFieldNumber;
const int SensorEventIndication::kOdometerFieldNumber;
const int SensorEventIndication::kFuelLevelFieldNumber;
const int SensorEventIndication::kParkingBrakeFieldNumber;
const int SensorEventIndication::kGearFieldNumber;
const int SensorEventIndication::kDiagnosticsFieldNumber;
const int SensorEventIndication::kNightModeFieldNumber;
const int SensorEventIndication::kEnviormentFieldNumber;
const int SensorEventIndication::kHvacFieldNumber;
const int SensorEventIndication::kDrivingStatusFieldNumber;
const int SensorEventIndication::kSteeringWheelFieldNumber;
const int SensorEventIndication::kPassengerFieldNumber;
const int SensorEventIndication::kDoorFieldNumber;
const int SensorEventIndication::kLightFieldNumber;
const int SensorEventIndication::kAccelFieldNumber;
const int SensorEventIndication::kGyroFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorEventIndication::SensorEventIndication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_SensorEventIndicationMessage_2eproto::scc_info_SensorEventIndication.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:f1x.aasdk.proto.messages.SensorEventIndication)
}
SensorEventIndication::SensorEventIndication(const SensorEventIndication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      gps_location_(from.gps_location_),
      compass_(from.compass_),
      speed_(from.speed_),
      rpm_(from.rpm_),
      odometer_(from.odometer_),
      fuel_level_(from.fuel_level_),
      parking_brake_(from.parking_brake_),
      gear_(from.gear_),
      diagnostics_(from.diagnostics_),
      night_mode_(from.night_mode_),
      enviorment_(from.enviorment_),
      hvac_(from.hvac_),
      driving_status_(from.driving_status_),
      steering_wheel_(from.steering_wheel_),
      passenger_(from.passenger_),
      door_(from.door_),
      light_(from.light_),
      accel_(from.accel_),
      gyro_(from.gyro_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:f1x.aasdk.proto.messages.SensorEventIndication)
}

void SensorEventIndication::SharedCtor() {
}

SensorEventIndication::~SensorEventIndication() {
  // @@protoc_insertion_point(destructor:f1x.aasdk.proto.messages.SensorEventIndication)
  SharedDtor();
}

void SensorEventIndication::SharedDtor() {
}

void SensorEventIndication::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SensorEventIndication::descriptor() {
  ::protobuf_SensorEventIndicationMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SensorEventIndicationMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SensorEventIndication& SensorEventIndication::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_SensorEventIndicationMessage_2eproto::scc_info_SensorEventIndication.base);
  return *internal_default_instance();
}


void SensorEventIndication::Clear() {
// @@protoc_insertion_point(message_clear_start:f1x.aasdk.proto.messages.SensorEventIndication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gps_location_.Clear();
  compass_.Clear();
  speed_.Clear();
  rpm_.Clear();
  odometer_.Clear();
  fuel_level_.Clear();
  parking_brake_.Clear();
  gear_.Clear();
  diagnostics_.Clear();
  night_mode_.Clear();
  enviorment_.Clear();
  hvac_.Clear();
  driving_status_.Clear();
  steering_wheel_.Clear();
  passenger_.Clear();
  door_.Clear();
  light_.Clear();
  accel_.Clear();
  gyro_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SensorEventIndication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:f1x.aasdk.proto.messages.SensorEventIndication)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .f1x.aasdk.proto.data.GPSLocation gps_location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gps_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Compass compass = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_compass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Speed speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.RPM rpm = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rpm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Odometer odometer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_odometer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.FuelLevel fuel_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fuel_level()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.ParkingBrake parking_brake = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parking_brake()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Gear gear = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gear()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Diagnostics diagnostics = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.NightMode night_mode = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_night_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Environment enviorment = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_enviorment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.HVAC hvac = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hvac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.DrivingStatus driving_status = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_driving_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.SteeringWheel steering_wheel = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_steering_wheel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Passenger passenger = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_passenger()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Door door = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_door()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Light light = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_light()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Accel accel = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_accel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .f1x.aasdk.proto.data.Gyro gyro = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gyro()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:f1x.aasdk.proto.messages.SensorEventIndication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:f1x.aasdk.proto.messages.SensorEventIndication)
  return false;
#undef DO_
}

void SensorEventIndication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:f1x.aasdk.proto.messages.SensorEventIndication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .f1x.aasdk.proto.data.GPSLocation gps_location = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gps_location_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->gps_location(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Compass compass = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compass_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->compass(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Speed speed = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->speed(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.RPM rpm = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rpm_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->rpm(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Odometer odometer = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->odometer_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->odometer(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.FuelLevel fuel_level = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fuel_level_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->fuel_level(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.ParkingBrake parking_brake = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parking_brake_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->parking_brake(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Gear gear = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gear_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->gear(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Diagnostics diagnostics = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->diagnostics(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.NightMode night_mode = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->night_mode_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->night_mode(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Environment enviorment = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enviorment_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->enviorment(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.HVAC hvac = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hvac_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->hvac(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.DrivingStatus driving_status = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->driving_status_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->driving_status(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.SteeringWheel steering_wheel = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steering_wheel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->steering_wheel(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Passenger passenger = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->passenger_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->passenger(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Door door = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->door_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16,
      this->door(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Light light = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->light_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17,
      this->light(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Accel accel = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19,
      this->accel(static_cast<int>(i)),
      output);
  }

  // repeated .f1x.aasdk.proto.data.Gyro gyro = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gyro_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->gyro(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:f1x.aasdk.proto.messages.SensorEventIndication)
}

::google::protobuf::uint8* SensorEventIndication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:f1x.aasdk.proto.messages.SensorEventIndication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .f1x.aasdk.proto.data.GPSLocation gps_location = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gps_location_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->gps_location(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Compass compass = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->compass_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->compass(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Speed speed = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->speed(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.RPM rpm = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rpm_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->rpm(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Odometer odometer = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->odometer_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->odometer(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.FuelLevel fuel_level = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fuel_level_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->fuel_level(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.ParkingBrake parking_brake = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parking_brake_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->parking_brake(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Gear gear = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gear_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->gear(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Diagnostics diagnostics = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->diagnostics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->diagnostics(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.NightMode night_mode = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->night_mode_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->night_mode(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Environment enviorment = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enviorment_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->enviorment(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.HVAC hvac = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hvac_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->hvac(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.DrivingStatus driving_status = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->driving_status_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->driving_status(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.SteeringWheel steering_wheel = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->steering_wheel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->steering_wheel(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Passenger passenger = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->passenger_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->passenger(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Door door = 16;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->door_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->door(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Light light = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->light_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->light(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Accel accel = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->accel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->accel(static_cast<int>(i)), deterministic, target);
  }

  // repeated .f1x.aasdk.proto.data.Gyro gyro = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gyro_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->gyro(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:f1x.aasdk.proto.messages.SensorEventIndication)
  return target;
}

size_t SensorEventIndication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:f1x.aasdk.proto.messages.SensorEventIndication)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .f1x.aasdk.proto.data.GPSLocation gps_location = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->gps_location_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gps_location(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Compass compass = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->compass_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->compass(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Speed speed = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.RPM rpm = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->rpm_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rpm(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Odometer odometer = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->odometer_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->odometer(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.FuelLevel fuel_level = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->fuel_level_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fuel_level(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.ParkingBrake parking_brake = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->parking_brake_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parking_brake(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Gear gear = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->gear_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gear(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Diagnostics diagnostics = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->diagnostics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->diagnostics(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.NightMode night_mode = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->night_mode_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->night_mode(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Environment enviorment = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->enviorment_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->enviorment(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.HVAC hvac = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->hvac_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hvac(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.DrivingStatus driving_status = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->driving_status_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->driving_status(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.SteeringWheel steering_wheel = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->steering_wheel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->steering_wheel(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Passenger passenger = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->passenger_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->passenger(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Door door = 16;
  {
    unsigned int count = static_cast<unsigned int>(this->door_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->door(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Light light = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->light_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->light(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Accel accel = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->accel_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->accel(static_cast<int>(i)));
    }
  }

  // repeated .f1x.aasdk.proto.data.Gyro gyro = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->gyro_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gyro(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SensorEventIndication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:f1x.aasdk.proto.messages.SensorEventIndication)
  GOOGLE_DCHECK_NE(&from, this);
  const SensorEventIndication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorEventIndication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:f1x.aasdk.proto.messages.SensorEventIndication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:f1x.aasdk.proto.messages.SensorEventIndication)
    MergeFrom(*source);
  }
}

void SensorEventIndication::MergeFrom(const SensorEventIndication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:f1x.aasdk.proto.messages.SensorEventIndication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gps_location_.MergeFrom(from.gps_location_);
  compass_.MergeFrom(from.compass_);
  speed_.MergeFrom(from.speed_);
  rpm_.MergeFrom(from.rpm_);
  odometer_.MergeFrom(from.odometer_);
  fuel_level_.MergeFrom(from.fuel_level_);
  parking_brake_.MergeFrom(from.parking_brake_);
  gear_.MergeFrom(from.gear_);
  diagnostics_.MergeFrom(from.diagnostics_);
  night_mode_.MergeFrom(from.night_mode_);
  enviorment_.MergeFrom(from.enviorment_);
  hvac_.MergeFrom(from.hvac_);
  driving_status_.MergeFrom(from.driving_status_);
  steering_wheel_.MergeFrom(from.steering_wheel_);
  passenger_.MergeFrom(from.passenger_);
  door_.MergeFrom(from.door_);
  light_.MergeFrom(from.light_);
  accel_.MergeFrom(from.accel_);
  gyro_.MergeFrom(from.gyro_);
}

void SensorEventIndication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:f1x.aasdk.proto.messages.SensorEventIndication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorEventIndication::CopyFrom(const SensorEventIndication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:f1x.aasdk.proto.messages.SensorEventIndication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorEventIndication::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->gps_location())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->compass())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->speed())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rpm())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->odometer())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->fuel_level())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->parking_brake())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->gear())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->diagnostics())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->night_mode())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->enviorment())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->hvac())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->driving_status())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->steering_wheel())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->passenger())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->door())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->light())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->accel())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->gyro())) return false;
  return true;
}

void SensorEventIndication::Swap(SensorEventIndication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorEventIndication::InternalSwap(SensorEventIndication* other) {
  using std::swap;
  CastToBase(&gps_location_)->InternalSwap(CastToBase(&other->gps_location_));
  CastToBase(&compass_)->InternalSwap(CastToBase(&other->compass_));
  CastToBase(&speed_)->InternalSwap(CastToBase(&other->speed_));
  CastToBase(&rpm_)->InternalSwap(CastToBase(&other->rpm_));
  CastToBase(&odometer_)->InternalSwap(CastToBase(&other->odometer_));
  CastToBase(&fuel_level_)->InternalSwap(CastToBase(&other->fuel_level_));
  CastToBase(&parking_brake_)->InternalSwap(CastToBase(&other->parking_brake_));
  CastToBase(&gear_)->InternalSwap(CastToBase(&other->gear_));
  CastToBase(&diagnostics_)->InternalSwap(CastToBase(&other->diagnostics_));
  CastToBase(&night_mode_)->InternalSwap(CastToBase(&other->night_mode_));
  CastToBase(&enviorment_)->InternalSwap(CastToBase(&other->enviorment_));
  CastToBase(&hvac_)->InternalSwap(CastToBase(&other->hvac_));
  CastToBase(&driving_status_)->InternalSwap(CastToBase(&other->driving_status_));
  CastToBase(&steering_wheel_)->InternalSwap(CastToBase(&other->steering_wheel_));
  CastToBase(&passenger_)->InternalSwap(CastToBase(&other->passenger_));
  CastToBase(&door_)->InternalSwap(CastToBase(&other->door_));
  CastToBase(&light_)->InternalSwap(CastToBase(&other->light_));
  CastToBase(&accel_)->InternalSwap(CastToBase(&other->accel_));
  CastToBase(&gyro_)->InternalSwap(CastToBase(&other->gyro_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SensorEventIndication::GetMetadata() const {
  protobuf_SensorEventIndicationMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_SensorEventIndicationMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::f1x::aasdk::proto::messages::SensorEventIndication* Arena::CreateMaybeMessage< ::f1x::aasdk::proto::messages::SensorEventIndication >(Arena* arena) {
  return Arena::CreateInternal< ::f1x::aasdk::proto::messages::SensorEventIndication >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
