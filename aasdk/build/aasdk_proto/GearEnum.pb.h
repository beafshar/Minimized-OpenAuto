// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GearEnum.proto

#ifndef PROTOBUF_INCLUDED_GearEnum_2eproto
#define PROTOBUF_INCLUDED_GearEnum_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_GearEnum_2eproto 

namespace protobuf_GearEnum_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_GearEnum_2eproto
namespace f1x {
namespace aasdk {
namespace proto {
namespace enums {
class Gear;
class GearDefaultTypeInternal;
extern GearDefaultTypeInternal _Gear_default_instance_;
}  // namespace enums
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x
namespace google {
namespace protobuf {
template<> ::f1x::aasdk::proto::enums::Gear* Arena::CreateMaybeMessage<::f1x::aasdk::proto::enums::Gear>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace f1x {
namespace aasdk {
namespace proto {
namespace enums {

enum Gear_Enum {
  Gear_Enum_NEUTRAL = 0,
  Gear_Enum_FIRST = 1,
  Gear_Enum_SECOND = 2,
  Gear_Enum_THIRD = 3,
  Gear_Enum_FOURTH = 4,
  Gear_Enum_FIFTH = 5,
  Gear_Enum_SIXTH = 6,
  Gear_Enum_SEVENTH = 7,
  Gear_Enum_EIGHTH = 8,
  Gear_Enum_NINTH = 9,
  Gear_Enum_TENTH = 10,
  Gear_Enum_DRIVE = 100,
  Gear_Enum_PARK = 101,
  Gear_Enum_REVERSE = 102
};
bool Gear_Enum_IsValid(int value);
const Gear_Enum Gear_Enum_Enum_MIN = Gear_Enum_NEUTRAL;
const Gear_Enum Gear_Enum_Enum_MAX = Gear_Enum_REVERSE;
const int Gear_Enum_Enum_ARRAYSIZE = Gear_Enum_Enum_MAX + 1;

const ::google::protobuf::EnumDescriptor* Gear_Enum_descriptor();
inline const ::std::string& Gear_Enum_Name(Gear_Enum value) {
  return ::google::protobuf::internal::NameOfEnum(
    Gear_Enum_descriptor(), value);
}
inline bool Gear_Enum_Parse(
    const ::std::string& name, Gear_Enum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Gear_Enum>(
    Gear_Enum_descriptor(), name, value);
}
// ===================================================================

class Gear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:f1x.aasdk.proto.enums.Gear) */ {
 public:
  Gear();
  virtual ~Gear();

  Gear(const Gear& from);

  inline Gear& operator=(const Gear& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Gear(Gear&& from) noexcept
    : Gear() {
    *this = ::std::move(from);
  }

  inline Gear& operator=(Gear&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gear& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gear* internal_default_instance() {
    return reinterpret_cast<const Gear*>(
               &_Gear_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Gear* other);
  friend void swap(Gear& a, Gear& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gear* New() const final {
    return CreateMaybeMessage<Gear>(NULL);
  }

  Gear* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Gear>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Gear& from);
  void MergeFrom(const Gear& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Gear* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Gear_Enum Enum;
  static const Enum NEUTRAL =
    Gear_Enum_NEUTRAL;
  static const Enum FIRST =
    Gear_Enum_FIRST;
  static const Enum SECOND =
    Gear_Enum_SECOND;
  static const Enum THIRD =
    Gear_Enum_THIRD;
  static const Enum FOURTH =
    Gear_Enum_FOURTH;
  static const Enum FIFTH =
    Gear_Enum_FIFTH;
  static const Enum SIXTH =
    Gear_Enum_SIXTH;
  static const Enum SEVENTH =
    Gear_Enum_SEVENTH;
  static const Enum EIGHTH =
    Gear_Enum_EIGHTH;
  static const Enum NINTH =
    Gear_Enum_NINTH;
  static const Enum TENTH =
    Gear_Enum_TENTH;
  static const Enum DRIVE =
    Gear_Enum_DRIVE;
  static const Enum PARK =
    Gear_Enum_PARK;
  static const Enum REVERSE =
    Gear_Enum_REVERSE;
  static inline bool Enum_IsValid(int value) {
    return Gear_Enum_IsValid(value);
  }
  static const Enum Enum_MIN =
    Gear_Enum_Enum_MIN;
  static const Enum Enum_MAX =
    Gear_Enum_Enum_MAX;
  static const int Enum_ARRAYSIZE =
    Gear_Enum_Enum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Enum_descriptor() {
    return Gear_Enum_descriptor();
  }
  static inline const ::std::string& Enum_Name(Enum value) {
    return Gear_Enum_Name(value);
  }
  static inline bool Enum_Parse(const ::std::string& name,
      Enum* value) {
    return Gear_Enum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:f1x.aasdk.proto.enums.Gear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_GearEnum_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Gear

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace enums
}  // namespace proto
}  // namespace aasdk
}  // namespace f1x

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::f1x::aasdk::proto::enums::Gear_Enum> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::f1x::aasdk::proto::enums::Gear_Enum>() {
  return ::f1x::aasdk::proto::enums::Gear_Enum_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_GearEnum_2eproto
